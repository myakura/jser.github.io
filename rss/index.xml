<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSer.info</title>
    <description>JavaScriptの最新情報を紹介する週刊ブログ</description>
    <link>https://jser.info/</link>
    <atom:link href="https://jser.info/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 18 May 2021 13:44:18 +0900</pubDate>
    <lastBuildDate>Tue, 18 May 2021 13:44:18 +0900</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>
    
      <item>
        <title>2021-05-18のJS: Node.js 14.17.0、TypeScript 4.3 RC(インクリメンタルビルドの改善)、Angular v12</title>
        <description>&lt;p&gt;JSer.info #540 - 現在のLTSの最新版であるNode v14.17.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v14.17.0/&quot;&gt;Node v14.17.0 (LTS) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node v14.17.0では、Node.js 15.x で追加された機能やモジュールがバックポートされています。&lt;/p&gt;

&lt;p&gt;診断情報を扱う&lt;a href=&quot;https://nodejs.org/api/diagnostics_channel.html&quot;&gt;diagnostics_channel&lt;/a&gt;モジュールの追加、UUID v4を生成する&lt;code&gt;crypto.randomUUID()&lt;/code&gt;が追加されています。&lt;br&gt;
&lt;code&gt;crypto.randomUUID()&lt;/code&gt; はWHATWGで定義されている仕様で、&lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/e70b29ae998ed65902cdaeb0b2418a13d0755773&quot;&gt;Chromeにも実装が追加&lt;/a&gt;されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/uuid&quot;&gt;WICG/uuid: UUID V4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/feature/5689159362543616&quot;&gt;crypto.randomUUID() - Chrome Platform Status&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、&lt;code&gt;--experimental-abortcontroller&lt;/code&gt;の実験フラグ付きですが、&lt;code&gt;AbortController&lt;/code&gt;と&lt;code&gt;AbortSignal&lt;/code&gt;の対応が次のメソッドに追加されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;child_process.exec&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;child_process.execFile&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;child_process.fork&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;child_process.spawn&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dgram.createSocket&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;events.on&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;events.once&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fs.readFile&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fs.watch&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fs.writeFile&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http.request&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;https.request&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http2Session.request&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Promise版の&lt;code&gt;setImmediate&lt;/code&gt;と&lt;code&gt;setTimeout&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;TypeScript 4.3 RC(リリース候補)がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-3-rc/&quot;&gt;Announcing TypeScript 4.3 RC | TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;基本的な変更内容はBetaのものを含んでいます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/2021/04/06/typescript-4.3-beta-hls.js-v1.0.0apple-low-latency-hls-storybook-6.2/&quot;&gt;2021-04-06のJS: TypeScript 4.3 Beta、hls.js v1.0.0(Apple Low-Latency HLS)、Storybook 6.2 - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;RCで新たに追加されたものとして、&lt;code&gt;--incremental&lt;/code&gt;と&lt;code&gt;--watch&lt;/code&gt;を使った初回のビルドが遅い問題が解消されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/TypeScript/pull/43314&quot;&gt;Do not calculate signatures if old state is not used by sheetalkamat · Pull Request #43314 · microsoft/TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/TypeScript/pull/42960&quot;&gt;Make initial incremental/watch builds as fast normal builds by sokra · Pull Request #42960 · microsoft/TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、&lt;code&gt;--incremental&lt;/code&gt;フラグなどを使った際に生成される&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-3-rc/#tsbuildinfo-size-improvements&quot;&gt;&lt;code&gt;.tsbuildinfo&lt;/code&gt;のファイルサイズが改善&lt;/a&gt;されています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://angular.io/guide/releases#release-frequency&quot;&gt;6ヶ月ごとにメジャーアップデート&lt;/a&gt;されるAngularの最新版であるAngular 12がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.angular.io/angular-v12-is-now-available-32ed51fbfd49&quot;&gt;Angular v12 is now available. It’s that time again, friends — we’re… | by Mark Techson | May, 2021 | Angular Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular/releases/tag/12.0.0&quot;&gt;Release 12.0.0 · angular/angular&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;View Engineは非推奨となりIvyがデフォルトへと移行、Legacy i18n Message IDsからの移行ツールが公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://angular.io/guide/migration-legacy-message-id&quot;&gt;Angular - Migrating legacy localization IDs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以前、開発終了を告知されていたProtractorについても、Angular 12からProtractorはデフォルトでは新規プロジェクトには含めないようになっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/protractor/issues/5502#issuecomment-837432362&quot;&gt;Future of Angular E2E &amp;amp; Plans for Protractor · Issue #5502 · angular/protractor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、Angular 12ではIE 11のサポートが非推奨となり警告が出るようになっています。&lt;br&gt;
IE 11のサポートはAngular 13で削除される予定です。&lt;br&gt;
そのため、AngularでのIEサポートはAngular 12が最後となり、Angular 12のLTS期限である2022年11月で完全にIEサポートが終了する予定となっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular/issues/41840&quot;&gt;RFC: Internet Explorer 11 support deprecation and removal · Issue #41840 · angular/angular&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;その他には、インラインSaaSのサポートなど。 TypeScript 4.2へのアップデート、webpack 5の正式サポートなども含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what-do-you-not-like-about-definitelytyped-as-a-user-and-contributor-issue-44030-microsoft-typescript&quot;&gt;What do you not like about DefinitelyTyped as a user and contributor? · Issue #44030 · microsoft/TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/TypeScript/issues/44030&quot; title=&quot;What do you not like about DefinitelyTyped as a user and contributor? · Issue #44030 · microsoft/TypeScript&quot;&gt;github.com/microsoft/TypeScript/issues/44030&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;DefinitelyTypedへの意見を募集しているIssue&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v14-17-0-lts-node-js&quot;&gt;Node v14.17.0 (LTS) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v14.17.0/&quot; title=&quot;Node v14.17.0 (LTS) | Node.js&quot;&gt;nodejs.org/en/blog/release/v14.17.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node v14.17.0リリース。&lt;br&gt;
試験的に&lt;code&gt;diagnostics_channel&lt;/code&gt;を追加、&lt;code&gt;crypto.randomUUID()&lt;/code&gt;の追加。&lt;br&gt;
また、Node.js 15で実装されていたコアモジュールにおける&lt;code&gt;AbortController&lt;/code&gt;と&lt;code&gt;AbortSignal&lt;/code&gt;の対応をバックポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deno-1-10-release-notes-deno-blog&quot;&gt;Deno 1.10 Release Notes | Deno Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://deno.com/blog/v1.10&quot; title=&quot;Deno 1.10 Release Notes | Deno Blog&quot;&gt;deno.com/blog/v1.10&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Deno 1.10リリース。&lt;br&gt;
&lt;code&gt;deno test&lt;/code&gt;がisolateした状態でparallelにテストを実行、&lt;code&gt;permissions&lt;/code&gt;の指定に対応、出力の変更、コメントのコードの型チェックに対応など。&lt;br&gt;
&lt;code&gt;Worker.postMessage&lt;/code&gt;がstructured clone algorithmに対応、localStorageなどのWeb Storage APIに対応。&lt;br&gt;
&lt;code&gt;WebAssembly.Memory&lt;/code&gt;が&lt;code&gt;shared&lt;/code&gt;オプションに対応、&lt;code&gt;--import-map&lt;/code&gt;へリモートURLを指定できるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-4-3-rc-typescript&quot;&gt;Announcing TypeScript 4.3 RC | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-3-rc/&quot; title=&quot;Announcing TypeScript 4.3 RC | TypeScript&quot;&gt;devblogs.microsoft.com/typescript/announcing-typescript-4-3-rc/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 4.3 RCリリース。&lt;br&gt;
setterにgetterとは異なる型を指定できるように、&lt;code&gt;override&lt;/code&gt;キーワードの追加、Template String Typeの改善。&lt;br&gt;
Private Class Elements(fields/methods/accessors)のサポート、&lt;code&gt;static&lt;/code&gt; Index Signatureのサポート。&lt;br&gt;
&lt;code&gt;ConstructorParameters&lt;/code&gt;がAbstract classをサポート、Genericsにおける型の絞り込みの改善、Promiseオブジェクトを条件式に渡してしまうミスのチェックを追加。&lt;br&gt;
その他には、&lt;code&gt;.tsbuildinfo&lt;/code&gt;のサイズ改善、watch時の初回ビルドの改善など。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular-v12-is-now-available-it-s-that-time-again-friends-we-re-by-mark-techson-may-2021-angular-blog&quot;&gt;Angular v12 is now available. It’s that time again, friends — we’re… | by Mark Techson | May, 2021 | Angular Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.angular.io/angular-v12-is-now-available-32ed51fbfd49&quot; title=&quot;Angular v12 is now available. It’s that time again, friends — we’re… | by Mark Techson | May, 2021 | Angular Blog&quot;&gt;blog.angular.io/angular-v12-is-now-available-32ed51fbfd49&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Angular 12リリース。&lt;br&gt;
View Engineは非推奨となりIvyがデフォルトへと移行、Legacy i18n Message IDsからの移行ツール、インラインSaaSのサポートなど。&lt;br&gt;
TypeScript 4.2へのアップデート、webpack 5の正式サポート、IE 11サポートの非推奨化など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular/releases/tag/12.0.0&quot; title=&quot;Release 12.0.0 · angular/angular&quot;&gt;Release 12.0.0 · angular/angular&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://angular.io/guide/migration-legacy-message-id&quot; title=&quot;Angular - Migrating legacy localization IDs&quot;&gt;Angular - Migrating legacy localization IDs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-release-v9-1-v8&quot;&gt;V8 release v9.1 · V8&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://v8.dev/blog/v8-release-91&quot; title=&quot;V8 release v9.1 · V8&quot;&gt;v8.dev/blog/v8-release-91&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;V8 v9.1リリース。&lt;br&gt;
Top-level awaitのデフォルトサポート、&lt;code&gt;#foo in obj&lt;/code&gt;のPrivate brand checksのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-docusaurus-2-beta-docusaurus&quot;&gt;Announcing Docusaurus 2 Beta | Docusaurus&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docusaurus.io/blog/2021/05/12/announcing-docusaurus-two-beta&quot; title=&quot;Announcing Docusaurus 2 Beta | Docusaurus&quot;&gt;docusaurus.io/blog/2021/05/12/announcing-docusaurus-two-beta&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Docusaurus 2 Betaリリース&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;writing-a-type-safe-store-lachlan-miller&quot;&gt;Writing A Type Safe Store | Lachlan Miller&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://lachlan-miller.me/articles/advanced-type-a-type-safe-store-for-vue-3&quot; title=&quot;Writing A Type Safe Store | Lachlan Miller&quot;&gt;lachlan-miller.me/articles/advanced-type-a-type-safe-store-for-vue-3&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vueのステート管理ライブラリであるPiniaのType SafeなStoreの型定義の解説&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/posva/pinia/&quot; title=&quot;posva/pinia: 🍍 Intuitive, type safe, light and flexible Store for Vue using the composition api with DevTools support&quot;&gt;posva/pinia: 🍍 Intuitive, type safe, light and flexible Store for Vue using the composition api with DevTools support&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;next-gen-css-container-css-tricks&quot;&gt;Next Gen CSS: @container | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/next-gen-css-container/&quot; title=&quot;Next Gen CSS: @container | CSS-Tricks&quot;&gt;css-tricks.com/next-gen-css-container/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;@container&lt;/code&gt;についての記事。&lt;br&gt;
親要素には&lt;code&gt;contain&lt;/code&gt;プロパティを指定する必要がある点、&lt;code&gt;@container&lt;/code&gt;でのレスポンシブデザインについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cross-browser-tracking-vulnerablity-in-tor-safari-chrome-and-firefox-fingerprintjs&quot;&gt;Cross-browser tracking vulnerablity in Tor, Safari, Chrome and Firefox - FingerprintJS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://fingerprintjs.com/blog/external-protocol-flooding/&quot; title=&quot;Cross-browser tracking vulnerablity in Tor, Safari, Chrome and Firefox - FingerprintJS&quot;&gt;fingerprintjs.com/blog/external-protocol-flooding/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;privacy&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ブラウザからURLスキームでアプリを開くときの挙動を利用してフィンガープリントできるという話。&lt;br&gt;
未知のプロトコルを開く際にはダイアログでの確認やユーザインタラクションが必要となっている。&lt;br&gt;
しかし、それぞれのブラウザで既知のプロトコルや&lt;code&gt;about:blank&lt;/code&gt;を使ったSOP(Same Origin Policy)での抜け道で、どのアプリがインストールされているかを判定できるという話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;docbase-kray-inc&quot;&gt;DocBaseのフロントエンド改修をどのように進めたか – KRAY Inc.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://kray.jp/blog/how-to-docbase-renewal/&quot; title=&quot;DocBaseのフロントエンド改修をどのように進めたか – KRAY Inc.&quot;&gt;kray.jp/blog/how-to-docbase-renewal/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CoffeeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;refacoring&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Backbone + Marionette + CoffeeScriptで書かれていたウェブサービスをReact + TypeScriptに一括で移行した話。&lt;br&gt;
E2Eを使ったテスト、構造を維持しながらReact化、コンポーネントへの分離などの移行の方法についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;babel-is-used-by-millions-so-why-are-we-running-out-of-money-babel&quot;&gt;Babel is used by millions, so why are we running out of money? · Babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://babeljs.io/blog/2021/05/10/funding-update.html&quot; title=&quot;Babel is used by millions, so why are we running out of money? · Babel&quot;&gt;babeljs.io/blog/2021/05/10/funding-update.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Babelの資金の状態、ロードマップ、寄付について。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://babeljs.io/docs/en/roadmap#babel-2021-roadmap&quot; title=&quot;Babel Roadmap · Babel&quot;&gt;Babel Roadmap · Babel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;styled-components-cybozu-inside-out&quot;&gt;styled-componentsの採用と既存資産を捨てた理由 - Cybozu Inside Out | サイボウズエンジニアのブログ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.cybozu.io/entry/2020/06/25/105457&quot; title=&quot;styled-componentsの採用と既存資産を捨てた理由 - Cybozu Inside Out | サイボウズエンジニアのブログ&quot;&gt;blog.cybozu.io/entry/2020/06/25/105457&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;saas&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Sassで書かれていたスタイルをCSS in JSに移行する話。&lt;br&gt;
styled-componentsを使って書く場合にスタイリングとJSXを分離するためのルール、Sassの変数を抽出して移行するスクリプトについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;coderaiser-simport-import-like-with-require-but-using-async&quot;&gt;coderaiser/simport: Import like with require but using async&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/coderaiser/simport&quot; title=&quot;coderaiser/simport: Import like with require but using async&quot;&gt;github.com/coderaiser/simport&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ESMなNode.jsで&lt;code&gt;require&lt;/code&gt;、&lt;code&gt;__filename&lt;/code&gt;、&lt;code&gt;__dirname&lt;/code&gt;などのshim機能を提供するライブラリ&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 18 May 2021 11:32:50 +0900</pubDate>
        <link>https://jser.info/2021/05/18/node.js-14.17.0-typescript-4.3-rc-angular-v12/</link>
        <guid isPermaLink="true">https://jser.info/2021/05/18/node.js-14.17.0-typescript-4.3-rc-angular-v12/</guid>
        
        <category>TypeScript</category>
        
        <category>React</category>
        
        <category>node.js</category>
        
        <category>CSS</category>
        
        <category>issue</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-05-11のJS: Bootstrap 5、Underscore.js 1.13.0(`_.template`のセキュリティ修正)、Prettier 2.3</title>
        <description>&lt;p&gt;JSer.info #539 - CSSフレームワークであるBootstrap 5 がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.getbootstrap.com/2021/05/05/bootstrap-5/&quot;&gt;Bootstrap 5 | Bootstrap Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bootstrap 5では、IEのサポート終了し、jQueryに依存しないように書き換えられています。&lt;br&gt;
offcanvasコンポーネント、cardの代替えとなるaccordionコンポーネントが追加されています。&lt;br&gt;
また、FormとLayoutの変更、RTLのサポート、SassのUtility APIの追加なども行われています。&lt;/p&gt;

&lt;p&gt;v4からのマイグレーション方法については次のドキュメントにまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://getbootstrap.com/docs/5.0/migration/&quot;&gt;Migrating to v5 · Bootstrap v5.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Underscore.js 1.13がリリースされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://underscorejs.org/#1.13.0&quot;&gt;Underscore.js 1.13.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Underscore.js 1.13では、&lt;code&gt;package.json&lt;/code&gt;の&lt;a href=&quot;https://nodejs.org/api/packages.html#packages_exports&quot;&gt;&lt;code&gt;exports&lt;/code&gt;フィールド&lt;/a&gt;に対応し、ECMAScript Modulesをサポートしています。&lt;/p&gt;

&lt;p&gt;また、Underscore.js 1.12では、lodash &lt;a href=&quot;https://github.com/lodash/lodash/releases/tag/4.17.21&quot;&gt;4.17.21&lt;/a&gt;で修正された、&lt;code&gt;_.template&lt;/code&gt;の脆弱性の修正も含まれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://app.snyk.io/vuln/SNYK-JS-LODASH-1040724&quot;&gt;Command Injection in lodash | Snyk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;あまり多くはないと思いますが、UnderscoreとLodashどちらも&lt;code&gt;_.template&lt;/code&gt;の&lt;code&gt;variable&lt;/code&gt;オプションに任意の文字列を渡せる場合に、&lt;br&gt;
渡した文字列をコードとして実行できる脆弱性が修正されています。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;underscore&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;hello: &amp;lt;%= name %&amp;gt;&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;variable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;ここに任意の文字列を渡せると脆弱性&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Mustache&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;Prettier 2.3がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://prettier.io/blog/2021/05/09/2.3.0.html&quot;&gt;Prettier 2.3. In which assignments are consistent, short keys non-breaking, and Handlebars official · Prettier&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;JavaScriptのフォーマットの大きめな変更、Handlebarsサポートをalphaからreleaseに変更、JSON5/JSONのフォーマットの修正などが含まれています。&lt;br&gt;
JavaScriptの変数やプロパティへの代入における一貫性の修正が含まれているため、アップデート後に大きなDiffがでる可能性についても書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;bootstrap-5-bootstrap-blog&quot;&gt;Bootstrap 5 | Bootstrap Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.getbootstrap.com/2021/05/05/bootstrap-5/&quot; title=&quot;Bootstrap 5 | Bootstrap Blog&quot;&gt;blog.getbootstrap.com/2021/05/05/bootstrap-5/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Bootstrap 5リリース。&lt;br&gt;
IEのサポート終了、jQueryの削除。&lt;br&gt;
offcanvasコンポーネント、cardの代替えとなるaccordionコンポーネントの追加。&lt;br&gt;
FormとLayoutの変更、RTLのサポート、SassのUtility APIの追加など。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://getbootstrap.com/docs/5.0/migration/&quot; title=&quot;Migrating to v5 · Bootstrap v5.0&quot;&gt;Migrating to v5 · Bootstrap v5.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;underscore-js&quot;&gt;Underscore.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://underscorejs.org/#1.13.0&quot; title=&quot;Underscore.js&quot;&gt;underscorejs.org/#1.13.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;underscore 1.13.0リリース。&lt;br&gt;
ECMAScript Modulesのサポート。&lt;br&gt;
1.12.1では&lt;code&gt;_.template&lt;/code&gt;の&lt;code&gt;variable&lt;/code&gt;オプション経由でのCode Injectionができる脆弱性も修正されている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;prettier-2-3-in-which-assignments-are-consistent-short-keys-non-breaking-and-handlebars-official-prettier&quot;&gt;Prettier 2.3. In which assignments are consistent, short keys non-breaking, and Handlebars official · Prettier&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://prettier.io/blog/2021/05/09/2.3.0.html&quot; title=&quot;Prettier 2.3. In which assignments are consistent, short keys non-breaking, and Handlebars official · Prettier&quot;&gt;prettier.io/blog/2021/05/09/2.3.0.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Prettier 2.3リリース。&lt;br&gt;
JavaScriptのフォーマットの大きめな変更、Handlebarsサポートをalphaからreleaseに変更、JSON5/JSONのフォーマットの修正など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-we-use-web-components-at-github-the-github-blog&quot;&gt;How we use Web Components at GitHub - The GitHub Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.blog/2021-05-04-how-we-use-web-components-at-github/&quot; title=&quot;How we use Web Components at GitHub - The GitHub Blog&quot;&gt;github.blog/2021-05-04-how-we-use-web-components-at-github/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Github&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;GitHubでのWeb Componentsについて。&lt;br&gt;
Rails ViewComponentとCatalystを使ったWeb Componentsの組み込み、GitHub Elementsの公開についてなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/github/github-elements&quot; title=&quot;github/github-elements: GitHub&amp;amp;amp;#039;s Web Component collection.&quot;&gt;github/github-elements: GitHub&amp;#039;s Web Component collection.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;api&quot;&gt;リソースの読み込みを助けるウェブブラウザ API の世界&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nhiroki.jp/2021/05/06/resource-loading-apis&quot; title=&quot;リソースの読み込みを助けるウェブブラウザ API の世界&quot;&gt;nhiroki.jp/2021/05/06/resource-loading-apis&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;先読みや読み込みの優先度などウェブブラウザにおけるリソースロードのHintとなるAPIや仕組みについてのまとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;hello-modules-javascript-modules-also-known-as-esm-by-sindre-sorhus-may-2021-sindre-sorhus-blog&quot;&gt;Hello, Modules!. JavaScript Modules, also known as ESM… | by Sindre Sorhus | May, 2021 | 🦄 Sindre Sorhus’ blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.sindresorhus.com/hello-modules-d1010b4e777b&quot; title=&quot;Hello, Modules!. JavaScript Modules, also known as ESM… | by Sindre Sorhus | May, 2021 | 🦄 Sindre Sorhus’ blog&quot;&gt;blog.sindresorhus.com/hello-modules-d1010b4e777b&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 10のサポートが終了したことで、ESMへの移行をどのようにするかについての記事。&lt;br&gt;
ESMのメリット、パッケージのメンテナ向けの移行ガイドについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-guide-to-newly-supported-modern-css-pseudo-class-selectors-smashing-magazine&quot;&gt;A Guide To Newly Supported, Modern CSS Pseudo-Class Selectors — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2021/04/guide-supported-modern-css-pseudo-class-selectors/&quot; title=&quot;A Guide To Newly Supported, Modern CSS Pseudo-Class Selectors — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2021/04/guide-supported-modern-css-pseudo-class-selectors/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;最近のCSSで扱える擬似クラスの紹介記事。&lt;br&gt;
任意の&lt;code&gt;a&lt;/code&gt;にマッチする&lt;code&gt;:any-link&lt;/code&gt;、フォーカスしてる要素を扱う&lt;code&gt;:focus-visible&lt;/code&gt;と&lt;code&gt;:focus-within&lt;/code&gt;、セレクタを扱う&lt;code&gt;:is()&lt;/code&gt;と&lt;code&gt;where()&lt;/code&gt;と&lt;code&gt;:has()&lt;/code&gt;、&lt;code&gt;:empty&lt;/code&gt;など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chapter-8-css-css-tricks&quot;&gt;Chapter 8: CSS | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/chapter-8-css/&quot; title=&quot;Chapter 8: CSS | CSS-Tricks&quot;&gt;css-tricks.com/chapter-8-css/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;history&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSSの歴史についての記事。&lt;br&gt;
Lie、IE3のCSS実装、W3CのCSS WG、NetscapeのJSSS。&lt;br&gt;
doctype宣言でのスイッチと後方互換性、fantasai、CSS3でのモジューラアプローチについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;svelte-summit-spring-2021&quot;&gt;Svelte Summit Spring 2021 簡易まとめ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/tomoam/articles/889618f2e6e62f&quot; title=&quot;Svelte Summit Spring 2021 簡易まとめ&quot;&gt;zenn.dev/tomoam/articles/889618f2e6e62f&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Svelte&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Conference&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Svelte Summit Springの動画と概要のまとめ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://sveltesummit.com/&quot; title=&quot;Svelte Summit is a FREE whole-day online event.&quot;&gt;Svelte Summit is a FREE whole-day online event.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sinclairzx81-hammer-build-tool-for-browser-and-node-applications&quot;&gt;sinclairzx81/hammer: Build Tool for Browser and Node Applications&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sinclairzx81/hammer&quot; title=&quot;sinclairzx81/hammer: Build Tool for Browser and Node Applications&quot;&gt;github.com/sinclairzx81/hammer&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;esbuildをベースにしたparcelのようにHTMLをエントリポイントにしたビルド/開発ツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsxtools-cqfill-polyfill-for-css-container-queries&quot;&gt;jsxtools/cqfill: Polyfill for CSS Container Queries&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jsxtools/cqfill&quot; title=&quot;jsxtools/cqfill: Polyfill for CSS Container Queries&quot;&gt;github.com/jsxtools/cqfill&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;polyfill&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSS Container Queriesのpolyfill。&lt;br&gt;
PostCSSと組み合わせて利用できる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;google-zx-a-tool-for-writing-better-scripts&quot;&gt;google/zx: A tool for writing better scripts&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/google/zx&quot; title=&quot;google/zx: A tool for writing better scripts&quot;&gt;github.com/google/zx&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ShellScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;シェルスクリプトのような処理をJavaScriptで書けるNode.js製のツール。&lt;br&gt;
Top-Level awaitを使ってシェルコマンドをそのまま使える&lt;code&gt;$&lt;/code&gt;やHTTP通信するfetchなどが同梱されている。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-javascript-kindle-amazon&quot;&gt;プロフェッショナルWebプログラミング　JavaScript | 柳井 政和 | 工学 | Kindleストア | Amazon&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.co.jp/dp/B092QQJQF4/&quot; title=&quot;プロフェッショナルWebプログラミング　JavaScript | 柳井 政和 | 工学 | Kindleストア | Amazon&quot;&gt;www.amazon.co.jp/dp/B092QQJQF4/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ウェブページを動作させることに絞ったJavaScriptの入門書&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-vue-xss&quot;&gt;React と Vue に関する XSS アンチパターン&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/yuuhu04/books/xss-anti-pattern-of-react-and-vue&quot; title=&quot;React と Vue に関する XSS アンチパターン&quot;&gt;zenn.dev/yuuhu04/books/xss-anti-pattern-of-react-and-vue&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;XSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ReactとVueにおけるXSSのパターンについて書かれた文章。&lt;br&gt;
ReactとVueのエスケープの仕組み、フレームワークが保護しないケースとXSSが発生するパターンについて書かれている&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 11 May 2021 11:01:52 +0900</pubDate>
        <link>https://jser.info/2021/05/11/bootstrap-5-underscore.js-1.13.0_.template-prettier-2.3/</link>
        <guid isPermaLink="true">https://jser.info/2021/05/11/bootstrap-5-underscore.js-1.13.0_.template-prettier-2.3/</guid>
        
        <category>CSS</category>
        
        <category>Tools</category>
        
        <category>node.js</category>
        
        <category>book</category>
        
        <category>WebComponents</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-05-04のJS: Babel 7.14.0、RxJS 7.0.0、Safari 14.1</title>
        <description>&lt;p&gt;JSer.info #538 - Babel 7.14.0がリリースされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://babeljs.io/blog/2021/04/29/7.14.0&quot;&gt;7.14.0 Released: New class features enabled by default, TypeScript 4.3, and better CommonJS interop · Babel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/babel/babel/releases/tag/v7.14.0&quot;&gt;Release v7.14.0 · babel/babel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/ecmascript/2021/05/04/ecmascript-proposal-update&quot;&gt;2021-04のTC39ミーティング&lt;/a&gt;でStage 4となったclass fields/private methodsなどを&lt;code&gt;@babel/preset-env&lt;/code&gt;がデフォルトでサポートするようになりました。&lt;br&gt;
そのため、&lt;code&gt;@babel/plugin-proposal-class-properties&lt;/code&gt;と&lt;code&gt;@babel/plugin-proposal-private-methods&lt;/code&gt;を個別のプラグインとして入れる必要はなくなっています。&lt;/p&gt;

&lt;p&gt;また、Node.jsのESMからCommonJSのモジュールをインポートする際の相互運用性を向上させるオプションとして、&lt;code&gt;importInterop: &amp;quot;node&amp;quot;&lt;/code&gt;オプションの追加されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/babel/babel/pull/12838&quot;&gt;Implement &lt;code&gt;importInterop: &amp;quot;node&amp;quot;&lt;/code&gt; option for module transforms by nicolo-ribaudo · Pull Request #12838 · babel/babel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://babeljs.io/docs/en/babel-plugin-transform-modules-commonjs#importinterop&quot;&gt;@babel/plugin-transform-modules-commonjs · Babel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;またTypeScript 4.3のサポート、Stage 1のES Proposalである&lt;code&gt;async do&lt;/code&gt; expressionのサポートなども含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;RxJS 7.0.0がリリースされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#700-2021-04-29&quot;&gt;rxjs/CHANGELOG.md at master · ReactiveX/rxjs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://rxjs.dev/deprecations/breaking-changes&quot;&gt;RxJS - Breaking Changes in Version 7&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;RxJS 7.0.0ではファイルサイズが6.xに対して53%程度に小さくなっています。&lt;br&gt;
また、TypeScriptの型の修正やAPIの一貫性の修正などが含まれています。&lt;br&gt;
機能追加として、Async IteratorやReadable Streamの対応、&lt;code&gt;animationFrames&lt;/code&gt;、&lt;code&gt;share(config)&lt;/code&gt;の追加などが含まれています。&lt;/p&gt;

&lt;p&gt;次のスライドと動画でも詳しく紹介されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1-LU7YE3NWw8jHeAgdmLu4CBfG7osCx6MsSIeFs16k60/edit#slide=id.g389cbad6b8_0_36&quot;&gt;RxJS Live Asia 2021 - Google スライド&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=0S5ISwDaFHI&quot;&gt;RxJS Live! ASIA - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/11648/new-webkit-features-in-safari-14-1/&quot;&gt;New WebKit Features in Safari 14.1 | WebKit&lt;/a&gt;では、Safari 14.1の変更点について書かれています。&lt;/p&gt;

&lt;p&gt;Flexbox Gapのサポート、macOSで&lt;code&gt;input&lt;/code&gt;要素の&lt;code&gt;type&lt;/code&gt;属性で&lt;code&gt;date&lt;/code&gt;と&lt;code&gt;time&lt;/code&gt;と&lt;code&gt;datetime-local&lt;/code&gt;のサポートが追加されています。また、speech recognitionを含むWeb Speech API、MediaRecorder API、WebMのサポートなども追加されています。&lt;br&gt;
JavaScriptではClass Fields、WekRefのサポート、i18n APIのサポート改善、WebAssemblyのThreadingのサポートなどが含まれています。&lt;br&gt;
その他には、Private Click Measurementをデフォルトで有効化、Storage AccessAPIの更新やWeb Inspectorのアップデートなども含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;future-of-angular-e2e-plans-for-protractor-issue-5502-angular-protractor&quot;&gt;Future of Angular E2E &amp;amp; Plans for Protractor · Issue #5502 · angular/protractor&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/angular/protractor/issues/5502&quot; title=&quot;Future of Angular E2E &amp;amp;amp; Plans for Protractor · Issue #5502 · angular/protractor&quot;&gt;github.com/angular/protractor/issues/5502&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;E2E&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;AngularでのE2EテストフレームワークであるProtractorの開発終了のスケジュールについて。&lt;br&gt;
他のテストフレームワークが充実してきているので、2021年5月にDeprecatedとし、2020年末に開発終了とするスケジュールについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;7-14-0-released-new-class-features-enabled-by-default-typescript-4-3-and-better-commonjs-interop-babel&quot;&gt;7.14.0 Released: New class features enabled by default, TypeScript 4.3, and better CommonJS interop · Babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://babeljs.io/blog/2021/04/29/7.14.0&quot; title=&quot;7.14.0 Released: New class features enabled by default, TypeScript 4.3, and better CommonJS interop · Babel&quot;&gt;babeljs.io/blog/2021/04/29/7.14.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Babel 7.14.0リリース。&lt;br&gt;
Stage 4となったclass fieldsをpreset-envがデフォルトでサポート、&lt;code&gt;importInterop: &amp;quot;node&amp;quot;&lt;/code&gt;オプションの追加、TypeScript 4.3のサポート。&lt;br&gt;
また、Stage 1のES Proposalである&lt;code&gt;async do&lt;/code&gt; expressionのサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/babel/babel/releases/tag/v7.14.0&quot; title=&quot;Release v7.14.0 · babel/babel&quot;&gt;Release v7.14.0 · babel/babel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rxjs-changelog-md-at-master-reactivex-rxjs&quot;&gt;rxjs/CHANGELOG.md at master · ReactiveX/rxjs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#700-2021-04-29&quot; title=&quot;rxjs/CHANGELOG.md at master · ReactiveX/rxjs&quot;&gt;github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#700-2021-04-29&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Rx&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;RxJS 7.0.0リリース。&lt;br&gt;
TypeScript 4.2未満のサポート終了、&lt;code&gt;rxjs-compat&lt;/code&gt;の削除、&lt;code&gt;lift&lt;/code&gt;をexposeしないように、各種演算子のAPI変更など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://rxjs.dev/deprecations/breaking-changes&quot; title=&quot;RxJS - Breaking Changes in Version 7&quot;&gt;RxJS - Breaking Changes in Version 7&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;new-webkit-features-in-safari-14-1-webkit&quot;&gt;New WebKit Features in Safari 14.1 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/11648/new-webkit-features-in-safari-14-1/&quot; title=&quot;New WebKit Features in Safari 14.1 | WebKit&quot;&gt;webkit.org/blog/11648/new-webkit-features-in-safari-14-1/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari 14.1の変更点について。&lt;br&gt;
Flexbox Gap、macOSでDate&amp;amp;Time input、Web Speech API、MediaRecorder API、WebMのサポートなど。&lt;br&gt;
JavaScriptのClass Fields、WekRefのサポート、i18n APIのサポート改善、WebAssemblyのThreadingのサポートなど。&lt;br&gt;
また、Private Click Measurementをデフォルトで有効化、Storage AccessAPIの更新など。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-yargs-v17-0-0-yargs-yargs&quot;&gt;Release yargs v17.0.0 · yargs/yargs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/yargs/yargs/releases/tag/v17.0.0&quot; title=&quot;Release yargs v17.0.0 · yargs/yargs&quot;&gt;github.com/yargs/yargs/releases/tag/v17.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;コマンドライン引数パーサーのyargs 17.0.0リリース。&lt;br&gt;
破壊的な変更として、Node.js 10のサポート終了、PrivateメソッドにPrivate Fieldsを使うように変更、&lt;code&gt;reset()&lt;/code&gt;メソッドを非推奨化など。&lt;br&gt;
Node v14.8.0からTop-Level Awaitをサポートしたため、&lt;code&gt;yargs()&lt;/code&gt;や&lt;code&gt;parseAsync&lt;/code&gt;など色々な処理で非同期処理に対応するように変更など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-proposal-updates-2021-04-ecmascript-daily&quot;&gt;ECMAScript proposal updates @ 2021-04 | ECMAScript Daily&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/ecmascript/2021/05/04/ecmascript-proposal-update&quot; title=&quot;ECMAScript proposal updates @ 2021-04 | ECMAScript Daily&quot;&gt;ecmascript-daily.github.io/ecmascript/2021/05/04/ecmascript-proposal-update&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2021年4月のTC39 MeetingsでStageが変わったProposalのまとめ。&lt;br&gt;
Class Field/Private MethodsがStage 4となり、ES2022に入ることが決まった&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react17-event-delegation&quot;&gt;React17のevent delegationの破壊的変更を理解する&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/co9xs/articles/react17-event-delegation&quot; title=&quot;React17のevent delegationの破壊的変更を理解する&quot;&gt;zenn.dev/co9xs/articles/react17-event-delegation&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React 17のevent delegationの変更についての記事。&lt;br&gt;
実際に動作が変わるサンプルを元に、React 17でのevent delegationの仕組みの変化について解説している&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ja.reactjs.org/blog/2020/08/10/react-v17-rc.html&quot; title=&quot;React v17.0 Release Candidate: 新機能「なし」 – React Blog&quot;&gt;React v17.0 Release Candidate: 新機能「なし」 – React Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-use-ecmascript-modules-in-node-js&quot;&gt;How to Use ECMAScript Modules in Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dmitripavlutin.com/ecmascript-modules-nodejs/&quot; title=&quot;How to Use ECMAScript Modules in Node.js&quot;&gt;dmitripavlutin.com/ecmascript-modules-nodejs/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsでのECMAScript modulesの使い方についての記事。&lt;br&gt;
モジュールモード、モジュールのimportの方法、Dynamic Import、CommonJSなモジュールのimport、&lt;code&gt;import.meta&lt;/code&gt;についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;build-an-https-intercepting-javascript-proxy-in-30-seconds-flat-http-toolkit&quot;&gt;Build an HTTPS-intercepting JavaScript proxy in 30 seconds flat | HTTP Toolkit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://httptoolkit.tech/blog/javascript-mitm-proxy-mockttp/&quot; title=&quot;Build an HTTPS-intercepting JavaScript proxy in 30 seconds flat | HTTP Toolkit&quot;&gt;httptoolkit.tech/blog/javascript-mitm-proxy-mockttp/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;mockttpを使ったhttpsのサイトをProxyで書き換える方法についての紹介記事&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/httptoolkit/mockttp&quot; title=&quot;httptoolkit/mockttp: Powerful friendly HTTP mock server &amp;amp;amp;amp; proxy&quot;&gt;httptoolkit/mockttp: Powerful friendly HTTP mock server &amp;amp; proxy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-js-10-node-js-12&quot;&gt;Node.js 10がサポート終了したので、Node.js 12以降だとできるようになることをまとめる&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/azu/scraps/bb1106a04ed9e6&quot; title=&quot;Node.js 10がサポート終了したので、Node.js 12以降だとできるようになることをまとめる&quot;&gt;zenn.dev/azu/scraps/bb1106a04ed9e6&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 12から利用できるようになったNode.jsのAPIや機能、V8アップデートによるECMAScriptサポートについてまとめた記事。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;hosting-sqlite-databases-on-github-pages-or-any-static-file-hoster-phireskys-blog&quot;&gt;Hosting SQLite databases on Github Pages - (or any static file hoster) - phiresky&amp;#039;s blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://phiresky.github.io/blog/2021/hosting-sqlite-databases-on-github-pages/&quot; title=&quot;Hosting SQLite databases on Github Pages - (or any static file hoster) - phiresky&amp;amp;#039;s blog&quot;&gt;phiresky.github.io/blog/2021/hosting-sqlite-databases-on-github-pages/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;SQLite&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebAssemblyにコンパイルしたSQLiteと参照用のSQLiteファイルを用意し、必要な部分だけを取得できる仕組みを作ったという話。&lt;br&gt;
DBファイルをすべてメモリへ載せないで使うために、HTTP Rangeリクエストを使って必要なchunkだけを取得するHTTPベースの仮想ファイルシステムを作っている。&lt;br&gt;
SQLiteのDBのページサイズやスキーマ情報から必要な部分だけをRangeリクエストで取得している。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-cloudfront-functions-run-your-code-at-the-edge-with-low-latency-at-any-scale-aws-news-blog&quot;&gt;Introducing CloudFront Functions – Run Your Code at the Edge with Low Latency at Any Scale | AWS News Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/jp/blogs/aws/introducing-cloudfront-functions-run-your-code-at-the-edge-with-low-latency-at-any-scale/&quot; title=&quot;Introducing CloudFront Functions – Run Your Code at the Edge with Low Latency at Any Scale | AWS News Blog&quot;&gt;aws.amazon.com/jp/blogs/aws/introducing-cloudfront-functions-run-your-code-at-the-edge-with-low-latency-at-any-scale/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;aws&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;cdn&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;AWS CloudFrontでCDNエッジな処理をJavaScriptでかけるサービス。&lt;br&gt;
ECMAScript 5.1互換なJavaScript、処理時間が1ms以内、メモリは2MB以内、パッケージサイズは10kb以下のファイルサイズ、Network/File IOなし&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;itsjavi-jsx-runtime-extremely-lightweight-jsx-runtime-2kb-to-write-jsx-without-react-in-typescript-or-javascript&quot;&gt;itsjavi/jsx-runtime: Extremely lightweight JSX runtime (&amp;lt;2KB) to write JSX without React in TypeScript or JavaScript.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/itsjavi/jsx-runtime&quot; title=&quot;itsjavi/jsx-runtime: Extremely lightweight JSX runtime (&amp;amp;lt;2KB) to write JSX without React in TypeScript or JavaScript.&quot;&gt;github.com/itsjavi/jsx-runtime&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jsx&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JSXで書いて変換するとStandaloneで動作するコードを出力するJSX TransformerとRuntime&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;fower&quot;&gt;Fower&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://fower.vercel.app/&quot; title=&quot;Fower&quot;&gt;fower.vercel.app/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Svelte&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TailwindcssライクなUtility-firstのCSS in JSライブラリ。&lt;br&gt;
ReactやVue、またスタイルをJavaScriptで生成するためReact Nativeにも対応する。&lt;br&gt;
UtilityベースのスタイルをPropsとして指定し、TSXや各フレームワーク用のコード補完に対応している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://itnext.io/fower-v1-0-8df48723de0b&quot; title=&quot;Fower v1.0. After half a year’s efforts, today… | by forsigner | Apr, 2021 | ITNEXT&quot;&gt;Fower v1.0. After half a year’s efforts, today… | by forsigner | Apr, 2021 | ITNEXT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mantine&quot;&gt;Mantine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://mantine.dev/&quot; title=&quot;Mantine&quot;&gt;mantine.dev/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ReactコンポーネントとHooksのフレームワーク。&lt;br&gt;
CSS-in-JSにはJSSを利用している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cssinjs/jss&quot; title=&quot;cssinjs/jss: JSS is an authoring tool for CSS which uses JavaScript as a host language.&quot;&gt;cssinjs/jss: JSS is an authoring tool for CSS which uses JavaScript as a host language.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;multithreaded-javascript&quot;&gt;Multithreaded JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://learning.oreilly.com/library/view/multithreaded-javascript/9781098104429/&quot; title=&quot;Multithreaded JavaScript&quot;&gt;learning.oreilly.com/library/view/multithreaded-javascript/9781098104429/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webworker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2021年11月発売&lt;br&gt;
JavaScriptでのマルチスレッドについての書籍。&lt;br&gt;
Web Worker、Service Worker、SharedWorkerなどについて&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 04 May 2021 21:44:24 +0900</pubDate>
        <link>https://jser.info/2021/05/04/babel-7.14.0-rxjs-7.0.0-safari-14.1/</link>
        <guid isPermaLink="true">https://jser.info/2021/05/04/babel-7.14.0-rxjs-7.0.0-safari-14.1/</guid>
        
        <category>node.js</category>
        
        <category>React</category>
        
        <category>babel</category>
        
        <category>Angular</category>
        
        <category>E2E</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-04-27のJS: Node.js 16.0.0、Chrome 91 beta、Prisma(Ready for production)</title>
        <description>&lt;p&gt;JSer.info #537 - 次期LTS候補となるNode.js 16がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v16.0.0/&quot;&gt;Node v16.0.0 (Current) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.medium.com/node-js-16-available-now-7f5099a97e70&quot;&gt;Node.js 16 available now. We are excited to announce the release… | by Node.js | Apr, 2021 | Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://shisama.hatenablog.com/entry/2021/04/22/090000&quot;&gt;Node.js v16 の主な変更点 - 別にしんどくないブログ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;V8 9.0へアップデート、&lt;code&gt;timers/promises&lt;/code&gt;の追加、Apple Silicon向けのprebuiltバイナリの配布に対応しています。&lt;br&gt;
また、&lt;code&gt;fs.rmdir&lt;/code&gt;の&lt;code&gt;recursive&lt;/code&gt;オプションの非推奨化、&lt;code&gt;process.binding&lt;/code&gt;を使ったアクセスの非推奨化&lt;code&gt;module.createRequireFromPath&lt;/code&gt;の削除なども含まれています。&lt;/p&gt;

&lt;p&gt;Node.js 16にはNode.js 15の変更も含まれるので、npm 7へのアップデートやUnhandled Rejections時の終了ステータスの変更などの破壊的な変更も含まれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/2020/10/27/react-17-node-v15.0.0-libsass-is-deprecated/&quot;&gt;2020-10-27のJS: React 17、Node v15.0.0、LibSass is Deprecated - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://shisama.hatenablog.com/entry/2020/10/21/004612&quot;&gt;Node.js v15 の主な変更点 - 別にしんどくないブログ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.js 16は2021-10-26からLTSとなる予定です。&lt;br&gt;
また、Node.js 10.xは2021-04-30でサポートが終了されます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/Release&quot;&gt;nodejs/Release: Node.js Release Working Group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Chrome 91 betaがリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.chromium.org/2021/04/chrome-91-handwriting-recognition-webxr.html&quot;&gt;Chromium Blog: Chrome 91: Handwriting Recognition, WebXR Plane Detection and More&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Origin Trialとして、Service Workerのmanifestの&lt;a href=&quot;https://github.com/WICG/sw-launch/blob/main/declarative_link_capturing.md&quot;&gt;&lt;code&gt;capture_links&lt;/code&gt;&lt;/a&gt;、&lt;a href=&quot;https://w3c.github.io/webtransport/&quot;&gt;WebTransport&lt;/a&gt;、&lt;a href=&quot;https://www.chromestatus.com/feature/5732397976911872&quot;&gt;WebXR Plane Detection API&lt;/a&gt;。&lt;br&gt;
その他には、Timerの解像度を仕様準拠の値に変更、WebSockets over HTTP/2のサポート、Service WorkerでES Modulesのサポートなどが含まれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://mozaic.fm/episodes/72/webtransport.html&quot;&gt;ep72 WebTransport | mozaic.fm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Node.jsとTypeScriptを扱うORMである&lt;a href=&quot;https://www.prisma.io/&quot;&gt;Prisma&lt;/a&gt;がProduction Readyというリリースされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.prisma.io/blog/prisma-the-complete-orm-inw24qjeawmb&quot;&gt;Prisma – The Complete ORM for Node.js &amp;amp; TypeScript&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;日本語訳: &lt;a href=&quot;https://zenn.dev/kanasugi/articles/a082bd39c5bdf2&quot;&gt;Node.js &amp;amp; TypeScript向けの完璧なORM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;記事では、Primsaを構成するPrisma Client、Prisma Migrate、Prisma StudioというツールとPrismaの特徴について紹介されています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v16-0-0-current-node-js&quot;&gt;Node v16.0.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v16.0.0/&quot; title=&quot;Node v16.0.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v16.0.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 16.0.0リリース。&lt;br&gt;
V8 9.0へアップデート、&lt;code&gt;timers/promises&lt;/code&gt;の追加、Apple Silicon向けのprebuiltバイナリの配布など。&lt;br&gt;
&lt;code&gt;fs.rmdir&lt;/code&gt;の&lt;code&gt;recursive&lt;/code&gt;オプションの非推奨化、&lt;code&gt;process.binding&lt;/code&gt;を使ったアクセスの非推奨化、&lt;code&gt;module.createRequireFromPath&lt;/code&gt;の削除など。&lt;br&gt;
これに加えてNode 15での変更であるnpm 7へのアップデートなどが含まれている&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.medium.com/node-js-16-available-now-7f5099a97e70&quot; title=&quot;Node.js 16 available now. We are excited to announce the release… | by Node.js | Apr, 2021 | Medium&quot;&gt;Node.js 16 available now. We are excited to announce the release… | by Node.js | Apr, 2021 | Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v11-5-0-raineorshine-npm-check-updates&quot;&gt;Release v11.5.0 · raineorshine/npm-check-updates&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/raineorshine/npm-check-updates/releases/tag/v11.5.0&quot; title=&quot;Release v11.5.0 · raineorshine/npm-check-updates&quot;&gt;github.com/raineorshine/npm-check-updates/releases/tag/v11.5.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm-check-updates 11.5.0リリース。&lt;br&gt;
yarnの自動検出に対応&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v9-0-0-puppeteer-puppeteer&quot;&gt;Release v9.0.0 · puppeteer/puppeteer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/puppeteer/puppeteer/releases/tag/v9.0.0&quot; title=&quot;Release v9.0.0 · puppeteer/puppeteer&quot;&gt;github.com/puppeteer/puppeteer/releases/tag/v9.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Puppeteer 9.0.0リリース。&lt;br&gt;
Chromium 91へアップデート、Apple M1のサポート、&lt;code&gt;FileChooser.cancel()&lt;/code&gt;が同期処理になるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog-chrome-91-handwriting-recognition-webxr-plane-detection-and-more&quot;&gt;Chromium Blog: Chrome 91: Handwriting Recognition, WebXR Plane Detection and More&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2021/04/chrome-91-handwriting-recognition-webxr.html&quot; title=&quot;Chromium Blog: Chrome 91: Handwriting Recognition, WebXR Plane Detection and More&quot;&gt;blog.chromium.org/2021/04/chrome-91-handwriting-recognition-webxr.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 91ベータリリース。&lt;br&gt;
Origin Trialとして、Service Workerのmanifestの&lt;code&gt;capture_links&lt;/code&gt;、WebTransport、WebXR Plane Detection API。&lt;br&gt;
Timerの解像度を仕様準拠の値に変更、WebSockets over HTTP/2のサポート、Service WorkerでES Modulesのサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/sw-launch/blob/main/declarative_link_capturing.md&quot; title=&quot;sw-launch/declarative\_link\_capturing.md at main · WICG/sw-launch&quot;&gt;sw-launch/declarative_link_capturing.md at main · WICG/sw-launch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v4-1-0-reduxjs-redux&quot;&gt;Release v4.1.0 · reduxjs/redux&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/reduxjs/redux/releases/tag/v4.1.0&quot; title=&quot;Release v4.1.0 · reduxjs/redux&quot;&gt;github.com/reduxjs/redux/releases/tag/v4.1.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Redux 4.1.0リリース。&lt;br&gt;
エラーメッセージをproduction buildから除外することでファイルサイズの改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;understanding-typescripts-popularity-notes&quot;&gt;Understanding TypeScript&amp;#039;s Popularity | Notes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://orta.io/notes/js/why-typescript&quot; title=&quot;Understanding TypeScript&amp;amp;#039;s Popularity | Notes&quot;&gt;orta.io/notes/js/why-typescript&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;history&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptがなぜ人気となったのかを主要なイベントのタイムラインや類似するツールと比較しながら見ている記事。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;prisma-the-complete-orm-for-node-js-typescript&quot;&gt;Prisma – The Complete ORM for Node.js &amp;amp; TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.prisma.io/blog/prisma-the-complete-orm-inw24qjeawmb&quot; title=&quot;Prisma – The Complete ORM for Node.js &amp;amp;amp; TypeScript&quot;&gt;www.prisma.io/blog/prisma-the-complete-orm-inw24qjeawmb&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;MySQL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;PostgreSQL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsとTypeScript向けのORMマッパーであるPrismaがProduction Readyとなった。&lt;br&gt;
スキーマからTypeScriptの型定義を出力して利用できるPrisma Client、データモデルからPrisma Migrate、GUIでデータの閲覧と変更ができるPrisma Studioを持つ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/kanasugi/articles/a082bd39c5bdf2&quot; title=&quot;Node.js &amp;amp;amp;amp; TypeScript向けの完璧なORM&quot;&gt;Node.js &amp;amp; TypeScript向けの完璧なORM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;using-asynchronous-web-apis-from-webassembly&quot;&gt;Using asynchronous web APIs from WebAssembly&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/asyncify/&quot; title=&quot;Using asynchronous web APIs from WebAssembly&quot;&gt;web.dev/asyncify/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Emscriptenで非同期を扱うAsyncify、C++とJS間の値を変換するEmbind、JavaScriptを組み合わせてWasmから非同期のWebPlatformAPIを扱う方法について。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChromeLabs/asyncify&quot; title=&quot;GoogleChromeLabs/asyncify: Standalone Asyncify helper for Binaryen&quot;&gt;GoogleChromeLabs/asyncify: Standalone Asyncify helper for Binaryen&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-great-samesite-confusion-jub0bs-com&quot;&gt;The great SameSite confusion :: jub0bs.com&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jub0bs.com/posts/2021-01-29-great-samesite-confusion/&quot; title=&quot;The great SameSite confusion :: jub0bs.com&quot;&gt;jub0bs.com/posts/2021-01-29-great-samesite-confusion/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;cross-site/same-siteとcross-origin/same-originの違いについての解説記事。&lt;br&gt;
Same-Site Cookieの動作とメカニズムについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/agektmr/articles/f8dcd345a88c97&quot; title=&quot;same-site/cross-site, same-origin/cross-originをちゃんと理解する&quot;&gt;same-site/cross-site, same-origin/cross-originをちゃんと理解する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;overflow-issues-in-css-smashing-magazine&quot;&gt;Overflow Issues In CSS — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2021/04/css-overflow-issues/&quot; title=&quot;Overflow Issues In CSS — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2021/04/css-overflow-issues/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ページの幅を突き抜ける要素の問題と対策についての記事。&lt;br&gt;
要素やCSSプロパティごとに問題の原因や対応方法について紹介している。&lt;br&gt;
またoverflowしている要素の見つけた方などのデバッグ方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;headless-wysiwyg-text-editor-tiptap-editor&quot;&gt;Headless WYSIWYG Text Editor – tiptap editor&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.tiptap.dev/&quot; title=&quot;Headless WYSIWYG Text Editor – tiptap editor&quot;&gt;www.tiptap.dev/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ProseMirrorベースのWYSIWYGエディタライブラリ。&lt;br&gt;
Vue、React、Svelteなどに対応、Y.jsを使ったリアルタイムコラボレーションの対応、シンタックスハイライトやMarkdownの記法を使ったショートカットに対応している&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mhmd-22-ezgesture-small-js-library-for-enabling-gesture-events&quot;&gt;mhmd-22/ezgesture: Small js library for enabling gesture events&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mhmd-22/ezgesture&quot; title=&quot;mhmd-22/ezgesture: Small js library for enabling gesture events&quot;&gt;github.com/mhmd-22/ezgesture&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ドラッグ、スワイプ、ピンチイン/アウトを扱うライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vue-js-ui-ux-library-inkline&quot;&gt;Vue.js UI/UX Library - Inkline&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://inkline.io/&quot; title=&quot;Vue.js UI/UX Library - Inkline&quot;&gt;inkline.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue向けのUIフレームワーク&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;style-check&quot;&gt;Style Check&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://style-check.austingil.com/&quot; title=&quot;Style Check&quot;&gt;style-check.austingil.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSSを読み込んでHTML要素に対するスタイルの影響をチェックできるツール&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-graphql-guide&quot;&gt;The GraphQL Guide&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://graphql.guide/&quot; title=&quot;The GraphQL Guide&quot;&gt;graphql.guide/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;GraphQL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;GraphQLについての書籍と動画。&lt;br&gt;
John ResigとLoren Sands-RamshawによるGraphQLのガイド。&lt;br&gt;
GraphQLの解説、フロントエンド、バックエンド、React、Vue、Android、iOSについて扱う&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.graphql.guide/releasing-the-graphql-guide-d9be04747148&quot; title=&quot;Releasing The GraphQL Guide. John Resig’s book on GraphQL is here! | by Loren Sands-Ramshaw | Apr, 2021 | The GraphQL Guide&quot;&gt;Releasing The GraphQL Guide. John Resig’s book on GraphQL is here! | by Loren Sands-Ramshaw | Apr, 2021 | The GraphQL Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 27 Apr 2021 11:24:29 +0900</pubDate>
        <link>https://jser.info/2021/04/27/node.js-16.0.0-chrome-91-beta-prismaready-for-production/</link>
        <guid isPermaLink="true">https://jser.info/2021/04/27/node.js-16.0.0-chrome-91-beta-prismaready-for-production/</guid>
        
        <category>node.js</category>
        
        <category>Tools</category>
        
        <category>Chrome</category>
        
        <category>TypeScript</category>
        
        <category>CSS</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-04-20のJS:  Headless UI 1.0、esbuild/Snowpack/Vite/wmrの比較、debugging Web Vitals</title>
        <description>&lt;p&gt;JSer.info #536 - ReactとVueに対応したスタイルなしコンポーネントライブラリであるHeadless UI 1.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.tailwindcss.com/headless-ui-v1&quot;&gt;Headless UI v1.0 – Tailwind CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tailwindlabs/headlessui&quot;&gt;tailwindlabs/headlessui: Completely unstyled, fully accessible UI components, designed to integrate beautifully with Tailwind CSS.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Headless UIはTailwind CSSと一緒に使う目的で開発されているため、コンポーネント自体にはスタイルは含まれていません。&lt;br&gt;
Headless UIにはReactとVueの実装がそれぞれあり、今回のリリースでそれぞれが1.0としてリリースされています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/comparing-the-new-generation-of-build-tools/&quot;&gt;Comparing the New Generation of Build Tools | CSS-Tricks&lt;/a&gt;という記事では、esbuild/Snowpack/Vite/wmrのビルドツールについて比較しています。&lt;/p&gt;

&lt;p&gt;それぞれのツールの特徴や使い方、サポートしているファイル形式、production buildなどについて比較しています。&lt;br&gt;
esbuildは少しレイヤーが異なる気はしますが、それぞれのツールの特徴がまとめられいます。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Google検索結果のランキングにpage experienceというWeb Vitalsをベースとして指標が6月から含まれる予定です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/search/blog/2020/11/timing-for-page-experience&quot;&gt;Timing for bringing page experience to Google Search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/search/blog/2021/04/more-details-page-experience&quot;&gt;More time, tools, and details on the page experience update&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これにあわせて、Web Vitalsのデバッグ方法やツールなどが色々と公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/debug-web-vitals-in-the-field/&quot;&gt;Debug Web Vitals in the field&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Web Vitalsのメトリクスのデバッグ方法&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2021/04/complete-guide-measure-core-web-vitals/&quot;&gt;An In-Depth Guide To Measuring Core Web Vitals — Smashing Magazine&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Web Vitalsの全体的な解説&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://webvitals.dev/cls&quot;&gt;Cumulative Layout Shift Debugger (CLS) - webvitals.dev&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;CLSのデバッグツール&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://waterfaller.dev/&quot;&gt;Waterfaller - find and fix all the slowdowns on your web page to boost speed and core web vital scores&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;ページロードをウォータフォール表示して、Web Vitalsのメトリクスなどをどのように改善するかを提示するツール&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deno-1-9-release-notes-deno-blog&quot;&gt;Deno 1.9 Release Notes | Deno Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://deno.com/blog/v1.9&quot; title=&quot;Deno 1.9 Release Notes | Deno Blog&quot;&gt;deno.com/blog/v1.9&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Deno 1.9リリース。&lt;br&gt;
HTTP/2なウェブサーバの実装、opcallの改善、Blob URLのサポート。&lt;br&gt;
&lt;code&gt;--allow-env&lt;/code&gt;と&lt;code&gt;--allow-run&lt;/code&gt;で個別の指定ができるように、&lt;code&gt;--prompt&lt;/code&gt;でインタラクティブにパーミッションの許可ができるように。&lt;br&gt;
&lt;code&gt;Deno.listenTls&lt;/code&gt;でALPNのサポート、tsconfig.jsonの&lt;code&gt;useDefineForClassFields&lt;/code&gt;をデフォルト化など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;new-in-chrome-90-chrome-developers&quot;&gt;New in Chrome 90 - Chrome Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.chrome.com/blog/new-in-chrome-90/&quot; title=&quot;New in Chrome 90 - Chrome Developers&quot;&gt;developer.chrome.com/blog/new-in-chrome-90/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 90リリース。&lt;br&gt;
&lt;code&gt;overflow: clip&lt;/code&gt;のサポート、AV1 Encoderサポート、Declarative Shadow DOMのサポートなど。&lt;br&gt;
Feature PolicyがPermissions Policyにリネーム、アドレスバーのデフォルトプロトコルが&lt;code&gt;https&lt;/code&gt;に変更など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;headless-ui-v1-0-tailwind-css&quot;&gt;Headless UI v1.0 – Tailwind CSS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.tailwindcss.com/headless-ui-v1&quot; title=&quot;Headless UI v1.0 – Tailwind CSS&quot;&gt;blog.tailwindcss.com/headless-ui-v1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;lib&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Headless UI 1.0リリース。&lt;br&gt;
ReactとVueのスタイルなしのUIコンポーネントの実装で、Tailwind CSSと組み合わせる目的で作られている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tailwindlabs/headlessui&quot; title=&quot;tailwindlabs/headlessui: Completely unstyled, fully accessible UI components, designed to integrate beautifully with Tailwind CSS.&quot;&gt;tailwindlabs/headlessui: Completely unstyled, fully accessible UI components, designed to integrate beautifully with Tailwind CSS.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6-0-0-pnpm-pnpm&quot;&gt;Release v6.0.0 · pnpm/pnpm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pnpm/pnpm/releases/tag/v6.0.0&quot; title=&quot;Release v6.0.0 · pnpm/pnpm&quot;&gt;github.com/pnpm/pnpm/releases/tag/v6.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;pnpm 6.0.0リリース。&lt;br&gt;
Node.js 10のサポート終了、&lt;code&gt;pre&lt;/code&gt;/&lt;code&gt;post&lt;/code&gt; scriptを自動で実行しないように、lockfileのフォーマットを変更、&lt;code&gt;pnpx&lt;/code&gt;が自動的にパッケージをインストールはしないようになるなど。&lt;br&gt;
&lt;code&gt;pnpm link&lt;/code&gt;が&lt;code&gt;--global&lt;/code&gt;をつけたときにglobal modulesとリンクするように、&lt;code&gt;pnpm fetch&lt;/code&gt;コマンドの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;helmet-changelog-md-at-main-helmetjs-helmet&quot;&gt;helmet/CHANGELOG.md at main · helmetjs/helmet&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/helmetjs/helmet/blob/main/CHANGELOG.md#450---2021-04-17&quot; title=&quot;helmet/CHANGELOG.md at main · helmetjs/helmet&quot;&gt;github.com/helmetjs/helmet/blob/main/CHANGELOG.md#450---2021-04-17&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;express&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Expressのセキュリティヘッダを扱うhelmet 4.5.0リリース。&lt;br&gt;
Cross-Origin isolationを扱うCOEP、COOP、CORPヘッダに対応など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/coop-coep/&quot; title=&quot;Making your website &amp;amp;amp;amp;quot;cross-origin isolated&amp;amp;amp;amp;quot; using COOP and COEP&quot;&gt;Making your website &amp;amp;quot;cross-origin isolated&amp;amp;quot; using COOP and COEP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-pdf-announcing-react-pdf-v2-0&quot;&gt;React-pdf - Announcing react-pdf v2.0&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://react-pdf.org/blog/announcing-react-pdf-v2&quot; title=&quot;React-pdf - Announcing react-pdf v2.0&quot;&gt;react-pdf.org/blog/announcing-react-pdf-v2&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;PDF&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ReactでPDFを作成するreact-pdf v2.0リリース。&lt;br&gt;
レイアウトとレンダリングの分離、SVGサポート、Hooks APIの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;never-too-late-for-firefox-88-mozilla-hacks-the-web-developer-blog&quot;&gt;Never too late for Firefox 88 - Mozilla Hacks - the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2021/04/never-too-late-for-firefox-88/&quot; title=&quot;Never too late for Firefox 88 - Mozilla Hacks - the Web developer blog&quot;&gt;hacks.mozilla.org/2021/04/never-too-late-for-firefox-88/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 88リリース。&lt;br&gt;
&lt;code&gt;:user-valid&lt;/code&gt;と&lt;code&gt;:user-invalid&lt;/code&gt;の実装、&lt;code&gt;RegExp#indices&lt;/code&gt;の実装、&lt;code&gt;AbortSignal.abort()&lt;/code&gt;の実装、FTPサポートの無効化など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/88&quot; title=&quot;Firefox 88 for developers - Mozilla | MDN&quot;&gt;Firefox 88 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/88.0/releasenotes/&quot; title=&quot;Firefox 88.0, See All New Features, Updates and Fixes&quot;&gt;Firefox 88.0, See All New Features, Updates and Fixes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;comparing-the-new-generation-of-build-tools-css-tricks&quot;&gt;Comparing the New Generation of Build Tools | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/comparing-the-new-generation-of-build-tools/&quot; title=&quot;Comparing the New Generation of Build Tools | CSS-Tricks&quot;&gt;css-tricks.com/comparing-the-new-generation-of-build-tools/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;esbuild, Snowpack, Vite, wmrを比較した記事。&lt;br&gt;
それぞれのツールの特徴や使い方、サポートしているファイル、production buildなどについて比較している。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-css-grid-inspector-webkit&quot;&gt;Introducing CSS Grid Inspector | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/11588/introducing-css-grid-inspector/&quot; title=&quot;Introducing CSS Grid Inspector | WebKit&quot;&gt;webkit.org/blog/11588/introducing-css-grid-inspector/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 123で導入されたCSS Grid Inspectorの紹介&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;real-world-css-vs-css-in-js-performance-comparison-tomas-pustelniks-personal-website&quot;&gt;Real-world CSS vs. CSS-in-JS performance comparison - Tomas Pustelnik&amp;#039;s personal website&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://pustelto.com/blog/css-vs-css-in-js-perf/&quot; title=&quot;Real-world CSS vs. CSS-in-JS performance comparison - Tomas Pustelnik&amp;amp;#039;s personal website&quot;&gt;pustelto.com/blog/css-vs-css-in-js-perf/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Styled Componentsを使ったCSS-in-JSと&lt;br&gt;
linaria を使ってCSSファイルに分離した場合のパフォーマンスを比較した記事。&lt;br&gt;
サイズ、Lighthouseなどを使ったRuntimeのパフォーマンス計測&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;html-inputs-and-labels-a-love-story-css-tricks&quot;&gt;HTML Inputs and Labels: A Love Story | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/html-inputs-and-labels-a-love-story/&quot; title=&quot;HTML Inputs and Labels: A Love Story | CSS-Tricks&quot;&gt;css-tricks.com/html-inputs-and-labels-a-love-story/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;LabelとInputについての記事。&lt;br&gt;
アクセシビリティを考慮したラベルの扱い方について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;debug-web-vitals-in-the-field&quot;&gt;Debug Web Vitals in the field&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/debug-web-vitals-in-the-field/&quot; title=&quot;Debug Web Vitals in the field&quot;&gt;web.dev/debug-web-vitals-in-the-field/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Web VitalsのメトリクスをJavaScriptで取得して、実際にどの要素がスコアに影響してるのかをデバッグする方法について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChromeLabs/web-vitals-report&quot; title=&quot;GoogleChromeLabs/web-vitals-report: Measure and report on your Web Vitals data in Google Analytics&quot;&gt;GoogleChromeLabs/web-vitals-report: Measure and report on your Web Vitals data in Google Analytics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;an-in-depth-guide-to-measuring-core-web-vitals-smashing-magazine&quot;&gt;An In-Depth Guide To Measuring Core Web Vitals — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2021/04/complete-guide-measure-core-web-vitals/&quot; title=&quot;An In-Depth Guide To Measuring Core Web Vitals — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2021/04/complete-guide-measure-core-web-vitals/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Web Vitalsについての記事。&lt;br&gt;
Web VitalsのLCP/FID/CLSの解説、Lighthouse/Google Search Consoleのレポート読み方、CrUXのデータの読み方や分析方法などについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;slow-and-steady-converting-sentry-s-entire-frontend-to-typescript-product-blog-sentry&quot;&gt;Slow and Steady: Converting Sentry’s Entire Frontend to TypeScript | Product Blog • Sentry&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.sentry.io/2021/04/12/slow-and-steady-converting-sentrys-entire-frontend-to-typescript&quot; title=&quot;Slow and Steady: Converting Sentry’s Entire Frontend to TypeScript | Product Blog • Sentry&quot;&gt;blog.sentry.io/2021/04/12/slow-and-steady-converting-sentrys-entire-frontend-to-typescript&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;refacoring&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;SentryのコードをベースをTypeScriptへマイグレーションした話。&lt;br&gt;
戦略として教育、新しいコードをTSで書く、既存のコードをTSに変換をしていった。&lt;br&gt;
徐々に変換していくこと、少しずつ複雑な型にしていくこと、TypeScriptを最新に保つことなどを教訓としてあげている。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;waterfaller-find-and-fix-all-the-slowdowns-on-your-web-page-to-boost-speed-and-core-web-vital-scores&quot;&gt;Waterfaller - find and fix all the slowdowns on your web page to boost speed and core web vital scores&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://waterfaller.dev/&quot; title=&quot;Waterfaller - find and fix all the slowdowns on your web page to boost speed and core web vital scores&quot;&gt;waterfaller.dev/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Web Vitalsの指標とリソースのロードをウォーターフォールチャートで表示し、なぜSlowdownしてるのかの解説と修正方法を提示してくれるツール。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cumulative-layout-shift-debugger-cls-webvitals-dev&quot;&gt;Cumulative Layout Shift Debugger (CLS) - webvitals.dev&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webvitals.dev/cls&quot; title=&quot;Cumulative Layout Shift Debugger (CLS) - webvitals.dev&quot;&gt;webvitals.dev/cls&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Cumulative Layout Shift(CLS)のデバッグツール&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ivanhofer-typesafe-i18n&quot;&gt;ivanhofer/typesafe-i18n&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ivanhofer/typesafe-i18n&quot; title=&quot;ivanhofer/typesafe-i18n&quot;&gt;github.com/ivanhofer/typesafe-i18n&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;i18n&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;依存のないi18nライブラリ。&lt;br&gt;
TypeScriptを使った翻訳漏れのチェック、pluralなどのtransformerサポート、rollupやCLIを使った最適化などをサポートしている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;lukejacksonn-servor-dependency-free-file-server-for-single-page-app-development&quot;&gt;lukejacksonn/servor: Dependency free file server for single page app development&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lukejacksonn/servor&quot; title=&quot;lukejacksonn/servor: Dependency free file server for single page app development&quot;&gt;github.com/lukejacksonn/servor&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;依存のないローカルサーバライブラリ。&lt;br&gt;
ファイル変更でリロード、起動時にブラウザやエディタで開く、httpsの対応のオレオレ証明生成などに対応している&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;callstack-linaria-zero-runtime-css-in-js-library&quot;&gt;callstack/linaria: Zero-runtime CSS in JS library&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/callstack/linaria&quot; title=&quot;callstack/linaria: Zero-runtime CSS in JS library&quot;&gt;github.com/callstack/linaria&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSS-in-JSでスタイルを書いて、そのスタイルをCSSファイルに分離するライブラリとツールキット。&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 20 Apr 2021 11:45:24 +0900</pubDate>
        <link>https://jser.info/2021/04/20/headless-ui-1.0-esbuildsnowpackvitewmr-debugging-web-vitals/</link>
        <guid isPermaLink="true">https://jser.info/2021/04/20/headless-ui-1.0-esbuildsnowpackvitewmr-debugging-web-vitals/</guid>
        
        <category>Tools</category>
        
        <category>performance</category>
        
        <category>Chrome</category>
        
        <category>browser</category>
        
        <category>TypeScript</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-04-13のJS: Node.jsのセキュリティアップデート、Cloudflare Pages、migrating Chrome  DevTools to TypeScript</title>
        <description>&lt;p&gt;JSer.info #535 - Node.jsのセキュリティアップデートとしてNode.js v10.24.1, v12.22.1, v14.16.1, v15.14.0がそれぞれリリースされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/vulnerability/april-2021-security-releases/&quot;&gt;April 2021 Security Releases | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;OpenSSL関係が2件と同梱されているnpmが依存する&lt;code&gt;y18n&lt;/code&gt;のprototype pollutionに関するアップデートが含まれています。&lt;/p&gt;

&lt;p&gt;また、Node.js 10 LTSのサポート期限は2021-04-30までとなっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/Release&quot;&gt;nodejs/Release: Node.js Release Working Group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Cloudflareの静的サイトホスティングサービスのCloudflare PagesがGAとなり一般公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.cloudflare.com/cloudflare-pages-ga/&quot;&gt;Cloudflare Pages is now Generally Available&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;VercelやNetlifyと類似するウェブサービスで&lt;a href=&quot;https://jamstack.org/&quot;&gt;Jamstack&lt;/a&gt;のような静的サイトを手軽に公開することに特化したサービスです。&lt;br&gt;
類似サービスとの比較は次の記事にまとまっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/catnose99/scraps/6780379210136f&quot;&gt;Cloudflare Pages・Vercel ・Netlify の違いや使い分けをまとめる&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;既知の問題などはドキュメントページにまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.cloudflare.com/pages/platform/known-issues&quot;&gt;Known issues · Cloudflare Pages docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.chrome.com/blog/migrating-to-typescript/&quot;&gt;DevTools architecture refresh: migrating DevTools to TypeScript - Chrome Developers&lt;/a&gt;という記事では、Chrome DevToolsのコードベースをClosure Compilerベースの型チェックからTypeScriptへどのようにマイグレーションしているかについて書かれています。&lt;/p&gt;

&lt;p&gt;もともとClosure Compilerベースの型チェックが行われていましたが、なぜTypeScriptへ移行するのかについて書かれています。また、移行の仕方として&lt;code&gt;any&lt;/code&gt;で一時的に型エラーを抑制するのではなく、TSの型エラーを手動で修正する時間がかかる方法を選んだのかについても書かれています。&lt;/p&gt;

&lt;p&gt;この記事の前段として、独自のモジュールの仕組みなどをもったレガシーなChrome DevToolsのコードベースをどのようにモダンにしたかの動画も合わせてみるとよさそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=BHogHiiyuQk&quot;&gt;Upgrading DevTools&amp;#39; architecture to the modern web - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v2-20-0-date-fns-date-fns&quot;&gt;Release v2.20.0 · date-fns/date-fns&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/date-fns/date-fns/releases/tag/v2.20.0&quot; title=&quot;Release v2.20.0 · date-fns/date-fns&quot;&gt;github.com/date-fns/date-fns/releases/tag/v2.20.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;date-fns 2.20.0リリース。&lt;br&gt;
&lt;code&gt;eachMinuteOfInterval&lt;/code&gt;, &lt;code&gt;nextWednesday&lt;/code&gt;, &lt;code&gt;nextThursday&lt;/code&gt;, &lt;code&gt;nextFriday&lt;/code&gt;, &lt;code&gt;nextSaturday&lt;/code&gt;, &lt;code&gt;nextSunday&lt;/code&gt; の追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;april-2021-security-releases-node-js&quot;&gt;April 2021 Security Releases | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/vulnerability/april-2021-security-releases/&quot; title=&quot;April 2021 Security Releases | Node.js&quot;&gt;nodejs.org/en/blog/vulnerability/april-2021-security-releases/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsのセキュリティアップデート。&lt;br&gt;
OpenSSL関係が2件、&lt;code&gt;y18n&lt;/code&gt;のprototype pollutionに関するアップデート。&lt;br&gt;
Node.js v10.24.1, v12.22.1, v14.16.1, v15.14.0がそれぞれリリースされている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v5-0-1-verdaccio-verdaccio&quot;&gt;Release v5.0.1 · verdaccio/verdaccio&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/verdaccio/verdaccio/releases/tag/v5.0.1&quot; title=&quot;Release v5.0.1 · verdaccio/verdaccio&quot;&gt;github.com/verdaccio/verdaccio/releases/tag/v5.0.1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm registryの実装であるverdaccio 5.0リリース。&lt;br&gt;
npm token createのサポートがデフォルト化、native moduleへの依存の問題からtokenの保存にleveldbではなくlowdbを利用するように。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/typicode/lowdb&quot; title=&quot;typicode/lowdb: ⚡️ lowdb is a small local JSON database powered by Lodash (supports Node, Electron and the browser)&quot;&gt;typicode/lowdb: ⚡️ lowdb is a small local JSON database powered by Lodash (supports Node, Electron and the browser)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cloudflare-pages-is-now-generally-available&quot;&gt;Cloudflare Pages is now Generally Available&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.cloudflare.com/cloudflare-pages-ga/&quot; title=&quot;Cloudflare Pages is now Generally Available&quot;&gt;blog.cloudflare.com/cloudflare-pages-ga/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Cloudflare PagesがGAとなり一般公開された。&lt;br&gt;
Netlifyライクな&lt;code&gt;_redirects&lt;/code&gt;ファイルのサポート。&lt;br&gt;
今後はGitLab/Bitbucket連携、webhooks、A/B testing、Cloudflare Workersとの連携強化をしていく予定&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;es2021-edition-of-javascript-for-impatient-programmers&quot;&gt;ES2021 edition of “JavaScript for impatient programmers”&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/rauschma/e9c00fddc17e73fab6ce6c22b2e78e17&quot; title=&quot;ES2021 edition of “JavaScript for impatient programmers”&quot;&gt;gist.github.com/rauschma/e9c00fddc17e73fab6ce6c22b2e78e17&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScript for impatient programmersのES2021版がリリース。&lt;br&gt;
ES2021版の変更点について書かれている&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://exploringjs.com/impatient-js/&quot; title=&quot;JavaScript for impatient programmers (ES2021 edition)&quot;&gt;JavaScript for impatient programmers (ES2021 edition)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-version-7-0-0-react-hook-form-react-hook-form&quot;&gt;Release Version 7.0.0 · react-hook-form/react-hook-form&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/react-hook-form/react-hook-form/releases/tag/v7.0.0&quot; title=&quot;Release Version 7.0.0 · react-hook-form/react-hook-form&quot;&gt;github.com/react-hook-form/react-hook-form/releases/tag/v7.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React Hook Form 7.0.0リリース。&lt;br&gt;
&lt;code&gt;register&lt;/code&gt;の使い方の変更、&lt;code&gt;valueAs*&lt;/code&gt;が&lt;code&gt;validate&lt;/code&gt;の前に処理されるように、APIの返り値や引数の変更などが含まれている。&lt;br&gt;
マイグレーション用のツールも合わせて公開されている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://react-hook-form.com/migrate-v6-to-v7/&quot; title=&quot;Migrate From V6 to V7 | React Hook Form - Simple React forms validation&quot;&gt;Migrate From V6 to V7 | React Hook Form - Simple React forms validation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;evolving-the-cls-metric&quot;&gt;Evolving the CLS metric&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/evolving-cls/&quot; title=&quot;Evolving the CLS metric&quot;&gt;web.dev/evolving-cls/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CLSのスコア計算のロジックの変更について。&lt;br&gt;
1秒のギャップ/最大5秒のセッションウィンドウでLayout Shiftを検出して、その合計をCLSのスコアとする予定について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/better-layout-shift-metric/&quot; title=&quot;Feedback wanted: The road to a better layout shift metric for long-lived pages&quot;&gt;Feedback wanted: The road to a better layout shift metric for long-lived pages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;devtools-architecture-refresh-migrating-devtools-to-typescript-chrome-developers&quot;&gt;DevTools architecture refresh: migrating DevTools to TypeScript - Chrome Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.chrome.com/blog/migrating-to-typescript/&quot; title=&quot;DevTools architecture refresh: migrating DevTools to TypeScript - Chrome Developers&quot;&gt;developer.chrome.com/blog/migrating-to-typescript/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome DevToolsのコードベースを&lt;br&gt;
Closure Compilerベースの型チェックからTypeScriptに移行する話。&lt;br&gt;
なぜ移行するのか、TypeScriptの型推論の評価、移行のオプションですべてのTSエラーを修正する方法を選んだ理由、マイグレーションの分析などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-definitive-guide-to-profiling-react-applications&quot;&gt;The definitive guide to profiling React applications&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.asayer.io/the-definitive-guide-to-profiling-react-applications&quot; title=&quot;The definitive guide to profiling React applications&quot;&gt;blog.asayer.io/the-definitive-guide-to-profiling-react-applications&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React DevToolsを使ったプロファイルとパフォーマンス改善について。&lt;br&gt;
DevToolsのFlamegraphなどの各種グラフの読み方、renderやcommitの意味、&lt;code&gt;Profiler&lt;/code&gt;コンポーネントについて。&lt;br&gt;
入力に対してデータの取得と更新を行うコードを例にしたプロファイラを使った改善の例など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cookpad-online-spring-internship-2021-youtube&quot;&gt;Cookpad Online Spring Internship 2021 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLGT7Exkshx4ifQpZkjim4yJN52D00Ej3c&quot; title=&quot;Cookpad Online Spring Internship 2021 - YouTube&quot;&gt;www.youtube.com/playlist?list&amp;#x3D;PLGT7Exkshx4ifQpZkjim4yJN52D00Ej3c&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScript/TypeScript/React/Next.jsの概要を紹介する動画&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webrtc&quot;&gt;はじめに | 好奇心旺盛な人のためのWebRTC&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webrtcforthecurious.com/ja/&quot; title=&quot;はじめに | 好奇心旺盛な人のためのWebRTC&quot;&gt;webrtcforthecurious.com/ja/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebRTC&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;translate&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebRTC For The Curiousの日本語訳&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 13 Apr 2021 22:32:18 +0900</pubDate>
        <link>https://jser.info/2021/04/13/node.js-cloudflare-pages-migrating-chrome-devtools-to-typescript/</link>
        <guid isPermaLink="true">https://jser.info/2021/04/13/node.js-cloudflare-pages-migrating-chrome-devtools-to-typescript/</guid>
        
        <category>React</category>
        
        <category>performance</category>
        
        <category>Chrome</category>
        
        <category>book</category>
        
        <category>node.js</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-04-06のJS: TypeScript 4.3 Beta、hls.js v1.0.0(Apple Low-Latency HLS)、Storybook 6.2</title>
        <description>&lt;p&gt;JSer.info #534 - TypeScript 4.3 Betaがリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-3-beta/&quot;&gt;Announcing TypeScript 4.3 Beta | TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今までは、getterとsetterは同じ型であることが強制されていましたが、setterにgetterより幅広い型を指定できるようになっています。また、継承したメソッドをoverrideしていることを意味する&lt;code&gt;override&lt;/code&gt;キーワードが追加され、&lt;code&gt;--noImplicitOverride&lt;/code&gt;でチェックできるようになっています。&lt;/p&gt;

&lt;p&gt;その他には、Template String Typeの改善、一部不完全だったPrivate Class Elements(fields/methods/accessors)のサポートが改善されています。&lt;br&gt;
Private Class ElementsのサポートはRuntimeの変更も含まれるため、これに合わせてruntimeのライブラリであるtslib 2.2.0がリリースされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/tslib/releases/2.2.0&quot;&gt;Release tslib 2.2.0 · microsoft/tslib&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、Promiseオブジェクトを条件式に渡してしまうミスのチェックができるようになり、&lt;code&gt;static&lt;/code&gt; Index Signaturesのサポートも追加されています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;HLS(HTTP Live Streaming)を扱うライブラリであるhls.js 1.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/video-dev/hls.js/releases/tag/v1.0.0&quot;&gt;Release v1.0.0 · video-dev/hls.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1.0.0では低遅延の動画を扱うApple Low-Latency HLSがサポートされています。&lt;br&gt;
また、fmp4 streamのサポート改善、コードベースをTypeScriptに書きなおしなども含まれています。&lt;br&gt;
破壊的な変更として&lt;code&gt;backBufferLength&lt;/code&gt;のデフォルト値の変更、イベントのシグネチャの変更なども含まれています。&lt;/p&gt;

&lt;p&gt;リリースに合わせてマイグレーションガイドも公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/video-dev/hls.js/blob/master/MIGRATING.md#migrating-from-hlsjs-0x-to-1x&quot;&gt;hls.js/MIGRATING.md at master · video-dev/hls.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Storybook 6.2がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://storybook.js.org/blog/storybook-6-2/&quot;&gt;Storybook 6.2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Storybook 6.2ではVue 3とSvelteのサポートが追加されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://storybook.js.org/blog/storybook-vue3/&quot;&gt;Storybook for Vue 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://storybook.js.org/blog/storybook-for-svelte/&quot;&gt;Storybook for Svelte&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Yarn 2のPnP/npm 7/ESMのサポート、webpack 5をopt-inでサポートしています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://storybook.js.org/blog/storybook-for-webpack-5/&quot;&gt;Storybook for Webpack 5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、Controls addonが改善され、JSON editorやcolor pickerなどの機能が追加されています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v12-22-0-lts-node-js&quot;&gt;Node v12.22.0 (LTS) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v12.22.0/&quot; title=&quot;Node v12.22.0 (LTS) | Node.js&quot;&gt;nodejs.org/en/blog/release/v12.22.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 12.22.0リリース。&lt;br&gt;
&lt;code&gt;--http-parser=legacy&lt;/code&gt;を非推奨化、ES ModulesをStable化、&lt;code&gt;NAPI_VERSION&lt;/code&gt;を&lt;code&gt;8&lt;/code&gt;に変更。&lt;br&gt;
&lt;code&gt;v8.takeCoverage()&lt;/code&gt;、&lt;code&gt;v8.stopCoverage()&lt;/code&gt;、&lt;code&gt;worker.performance.eventLoopUtilization()&lt;/code&gt;の追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6-0-0-typicode-husky&quot;&gt;Release v6.0.0 · typicode/husky&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/typicode/husky/releases/tag/v6.0.0&quot; title=&quot;Release v6.0.0 · typicode/husky&quot;&gt;github.com/typicode/husky/releases/tag/v6.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;license&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;husky 6.0.0リリース。&lt;br&gt;
5.0.0はParity Publicライセンスとしてリリースされ、30日経過したので6.0.0ではMITライセンスとなった。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v15-13-0-current-node-js&quot;&gt;Node v15.13.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v15.13.0/&quot; title=&quot;Node v15.13.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v15.13.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 15.13.0リリース。&lt;br&gt;
ウェブとの互換性を目的として&lt;code&gt;buffer&lt;/code&gt;モジュールに&lt;code&gt;btoa&lt;/code&gt;と&lt;code&gt;atob&lt;/code&gt;メソッドを実装など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-4-3-beta-typescript&quot;&gt;Announcing TypeScript 4.3 Beta | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-3-beta/&quot; title=&quot;Announcing TypeScript 4.3 Beta | TypeScript&quot;&gt;devblogs.microsoft.com/typescript/announcing-typescript-4-3-beta/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 4.3 Betaリリース。&lt;br&gt;
setterにgetterとは異なる型を指定できるように、&lt;code&gt;override&lt;/code&gt;キーワードの追加、Template String Typeの改善。&lt;br&gt;
Private Class Elements(fields/methods/accessors)のサポート、Promiseオブジェクトを条件式に渡してしまうミスのチェックを追加。&lt;br&gt;
その他には、&lt;code&gt;static&lt;/code&gt; Index Signatureのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v5-30-0-webpack-webpack&quot;&gt;Release v5.30.0 · webpack/webpack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v5.30.0&quot; title=&quot;Release v5.30.0 · webpack/webpack&quot;&gt;github.com/webpack/webpack/releases/tag/v5.30.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpack 5.30.0リリース。&lt;br&gt;
&lt;code&gt;cache.type: &amp;quot;memory&amp;quot;&lt;/code&gt;でwatch中に&lt;code&gt;[contenthash]&lt;/code&gt;などを使うと、ファイル変更ごとにゴミがメモリに貯まる問題の改善。&lt;br&gt;
&lt;code&gt;cache.maxGenerations&lt;/code&gt;と&lt;code&gt;cache.maxAge&lt;/code&gt;で不要となったキャッシュを削除できるように&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/webpack/issues/12947&quot; title=&quot;SourceMapDevTool plugin leaks memory in watch mode · Issue #12947 · webpack/webpack&quot;&gt;SourceMapDevTool plugin leaks memory in watch mode · Issue #12947 · webpack/webpack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/webpack/pull/12990&quot; title=&quot;memory usage improvements, add GC support for memory cache, persistent cache only mode by sokra · Pull Request #12990 · webpack/webpack&quot;&gt;memory usage improvements, add GC support for memory cache, persistent cache only mode by sokra · Pull Request #12990 · webpack/webpack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1-0-0-video-dev-hls-js&quot;&gt;Release v1.0.0 · video-dev/hls.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/video-dev/hls.js/releases/tag/v1.0.0&quot; title=&quot;Release v1.0.0 · video-dev/hls.js&quot;&gt;github.com/video-dev/hls.js/releases/tag/v1.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HLS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HLS.js 1.0.0リリース。&lt;br&gt;
Apple Low-Latency HLSのサポート、fmp4 streamのサポート改善、コードベースをTypeScriptに書きなおしなど。&lt;br&gt;
破壊的な変更として&lt;code&gt;backBufferLength&lt;/code&gt;のデフォルト値の変更、イベントのシグネチャの変更など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/video-dev/hls.js/blob/master/MIGRATING.md#migrating-from-hlsjs-0x-to-1x&quot; title=&quot;hls.js/MIGRATING.md at master · video-dev/hls.js&quot;&gt;hls.js/MIGRATING.md at master · video-dev/hls.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;proposal-for-dropping-ie11-support-in-vue-3-discussion-296-vuejs-rfcs&quot;&gt;Proposal for dropping ie11 support in Vue 3 · Discussion #296 · vuejs/rfcs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vuejs/rfcs/discussions/296&quot; title=&quot;Proposal for dropping ie11 support in Vue 3 · Discussion #296 · vuejs/rfcs&quot;&gt;github.com/vuejs/rfcs/discussions/296&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;IE&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue 3ではIE 11のサポートをしないというRFC。&lt;br&gt;
代わりにVue 2.xへ3.xの機能をバックポートすることに注力するというProposal。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v2-0-0-js-reporters-js-reporters&quot;&gt;Release v2.0.0 · js-reporters/js-reporters&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/js-reporters/js-reporters/releases/tag/v2.0.0&quot; title=&quot;Release v2.0.0 · js-reporters/js-reporters&quot;&gt;github.com/js-reporters/js-reporters/releases/tag/v2.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのテストフレームワークのレポートの共通インターフェイスを定義する目的のjs-reporters 2.0.0リリース。&lt;br&gt;
&lt;code&gt;SummaryReporter&lt;/code&gt;の実装、Proposalの更新など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;storybook-6-2&quot;&gt;Storybook 6.2&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://storybook.js.org/blog/storybook-6-2/&quot; title=&quot;Storybook 6.2&quot;&gt;storybook.js.org/blog/storybook-6-2/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Storybook 6.2リリース。&lt;br&gt;
Vue 3とSvelteサポート、Yarn 2のPnp/npm 7/ESMのサポート、webpack 5をopt-inでサポート。&lt;br&gt;
Controls addonにJSON editorやcolor pickerの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-hooks&quot;&gt;React Hooksのみでドラッグ＆ドロップの並び替えを実装する&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/uttk/articles/b90454baec68c8&quot; title=&quot;React Hooksのみでドラッグ＆ドロップの並び替えを実装する&quot;&gt;zenn.dev/uttk/articles/b90454baec68c8&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactで要素の並び替えをD&amp;amp;Dする実装についての記事。&lt;br&gt;
マウスイベントとCSSを使ったD&amp;amp;D、要素の重なりの判定、要素の入れ替えのアニメーションなどを実装しながら見ていく記事&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webview-tracing-smartnews-engineering-blog&quot;&gt;特定の端末のみで起こる WebView プチフリーズを Tracing を利用して追った話 - SmartNews Engineering Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.smartnews.com/blog/2021/03/chrome_tracing/&quot; title=&quot;特定の端末のみで起こる WebView プチフリーズを Tracing を利用して追った話 - SmartNews Engineering Blog&quot;&gt;developer.smartnews.com/blog/2021/03/chrome_tracing/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webview&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebViewのパフォーマンスデバッグについての記事。&lt;br&gt;
ChromeのRemote Inspectを使ってデバイスに接続し、プロファイルやTracingを使ったボトルネックの調査方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;organize-kubernetes-manifests-in-javascript-kosko&quot;&gt;Organize Kubernetes manifests in JavaScript | Kosko&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://kosko.dev/&quot; title=&quot;Organize Kubernetes manifests in JavaScript | Kosko&quot;&gt;kosko.dev/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;kubernetes&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;kubernetesのmanifestをJavaScript/TypeScriptで書けるツール。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mistlog-typetype-a-programming-language-designed-for-typescript-type-generation&quot;&gt;mistlog/typetype: A programming language designed for typescript type generation&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mistlog/typetype&quot; title=&quot;mistlog/typetype: A programming language designed for typescript type generation&quot;&gt;github.com/mistlog/typetype&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptの型書くDSLのパーサとジェネレーター。&lt;br&gt;
Conditional Typeを表現する&lt;code&gt;if&lt;/code&gt;、Mapped Typesを表現する&lt;code&gt;for&lt;/code&gt;などを使って型定義を書ける。&lt;br&gt;
パーサはreact-pegを使い、パースしたASTからBabelを通してTSのコードを出力している&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mistlog/react-peg&quot; title=&quot;mistlog/react-peg: A react style parser generator based on PEG.js&quot;&gt;mistlog/react-peg: A react style parser generator based on PEG.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;egoist-esbuild-register-transpile-jsx-typescript-and-esnext-features-on-the-fly-with-esbuild&quot;&gt;egoist/esbuild-register: Transpile JSX, TypeScript and esnext features on the fly with esbuild&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/egoist/esbuild-register&quot; title=&quot;egoist/esbuild-register: Transpile JSX, TypeScript and esnext features on the fly with esbuild&quot;&gt;github.com/egoist/esbuild-register&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;esbuildを使ったruntimeでの変換ツール。&lt;br&gt;
@babel/registerやts-node/registerのように&lt;code&gt;--require&lt;/code&gt;に指定して変換処理をする&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ficusjs-a-set-of-lightweight-functions-for-developing-applications-using-web-components&quot;&gt;FicusJS - a set of lightweight functions for developing applications using web components&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.ficusjs.org/&quot; title=&quot;FicusJS - a set of lightweight functions for developing applications using web components&quot;&gt;docs.ficusjs.org/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Web Componentsでアプリケーションを開発する目的のライブラリセット。&lt;br&gt;
コンポーネントの作成、&lt;code&gt;uhtml&lt;/code&gt;/&lt;code&gt;lit-html&lt;/code&gt;/&lt;code&gt;htm&lt;/code&gt;などを使ったレンダリング、Storeでのステート管理などの機能を提供する&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://dev.to/open-wc/developing-without-a-build-1-introduction-26ao&quot; title=&quot;Developing Without a Build (1): Introduction - DEV Community 👩‍💻👨‍💻&quot;&gt;Developing Without a Build (1): Introduction - DEV Community 👩‍💻👨‍💻&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;accessible-vue-the-why-and-how-of-building-inclusive-apps-in-vue-js&quot;&gt;Accessible Vue – The Why and How of building inclusive apps in Vue.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://accessible-vue.com/&quot; title=&quot;Accessible Vue – The Why and How of building inclusive apps in Vue.js&quot;&gt;accessible-vue.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ウェブアクセシビリティとVueでの実装についての書籍&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://leanpub.com/accessible-vue&quot; title=&quot;Accessible Vue by Marcus Herrmann \[Leanpub PDF/iPad/Kindle\]&quot;&gt;Accessible Vue by Marcus Herrmann [Leanpub PDF/iPad/Kindle]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 06 Apr 2021 07:08:25 +0900</pubDate>
        <link>https://jser.info/2021/04/06/typescript-4.3-beta-hls.js-v1.0.0apple-low-latency-hls-storybook-6.2/</link>
        <guid isPermaLink="true">https://jser.info/2021/04/06/typescript-4.3-beta-hls.js-v1.0.0apple-low-latency-hls-storybook-6.2/</guid>
        
        <category>Tools</category>
        
        <category>node.js</category>
        
        <category>TypeScript</category>
        
        <category>Vue</category>
        
        <category>license</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-03-30のJS: Firefox 87.0、Next.js 10.1、Spectreの対応</title>
        <description>&lt;p&gt;JSer.info #533 - Firefox 87.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/87.0/releasenotes/&quot;&gt;Firefox 87.0, See All New Features, Updates and Fixes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;トラッカースクリプトをブロックするとサイトの表示が遅くなる問題があり、トラッカースクリプトを何もしないローカルで差し替えてパフォーマンスの劣化を防ぐSmartBlockという機能が実装されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.mozilla.org/security/2021/03/23/introducing-smartblock/&quot;&gt;Firefox 87 introduces SmartBlock for Private Browsing - Mozilla Security Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、Chromeと同様にReferrer Policyのデフォルト値が&lt;code&gt;strict-origin-when-cross-origin&lt;/code&gt;となる変更が含まれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.mozilla.org/security/2021/03/22/firefox-87-trims-http-referrers-by-default-to-protect-user-privacy/&quot;&gt;Firefox 87 trims HTTP Referrers by default to protect user privacy - Mozilla Security Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2020/07/referrer-policy-new-chrome-default&quot;&gt;A new default Referrer-Policy for Chrome: strict-origin-when-cross-origin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Next.js 10.1がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nextjs.org/blog/next-10-1&quot;&gt;Blog - Next.js 10.1 | Next.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;webpack 5をopt-inで対応、パッケージサイズの改善、&lt;code&gt;next/image&lt;/code&gt;がApple M1の対応や新しい&lt;code&gt;layout&lt;/code&gt;オプションの追加されています。&lt;br&gt;
その他には、&lt;code&gt;pages/500.js&lt;/code&gt;での500ページのカスタマイズ、&lt;code&gt;router.push&lt;/code&gt;や&lt;code&gt;router.replace&lt;/code&gt;時にページトップへスクロールするように変更なども含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;次の記事では、CPUの設計上の脆弱性を使ったSpectreでのサイドチャネル攻撃について書かています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers-jp.googleblog.com/2021/03/a-spectre-proof-of-concept-for-spectre.html&quot;&gt;Google Developers Japan: Spectre の影響を受けないウェブを作るための概念実証について&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://security.googleblog.com/2021/03/a-spectre-proof-of-concept-for-spectre.html&quot;&gt;Google Online Security Blog: A Spectre proof-of-concept for a Spectre-proof web&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ブラウザやウェブ標準においてSpectre対策としてのプロセス分離やサイト分離、クロスオリジンリソースの読み取り防止などのセキュリティメカニズムについて書かれています。&lt;br&gt;
しかし、Spectre自体はCPUの設計上の問題であるため、サイドチャネル攻撃によってメモリ上のデータを読み取ることを防ぐことはできません。読み取れるメモリ上に機密な情報が乗らないようにするための対策となっています。&lt;/p&gt;

&lt;p&gt;また、&lt;a href=&quot;https://leaky.page/&quot;&gt;https://leaky.page/&lt;/a&gt; でSpectreの脆弱性をJavaScriptから利用してメモリ上のデータを読み取るインタラクティブなデモが公開されています。&lt;br&gt;
Intel Skylake CPU + Chrome 88 で動作が確認できるデモですが、デモ内では高精度なタイマーを使わずにどのようにメモリ上のキャッシュヒットを推測しているのかなどの仕組みについても書かれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=V_9cQP60ZGI&quot;&gt;Spectre JS Demo - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;あわせて、Spectre以後のウェブ開発における脅威モデルと戦略について書かれた次のドキュメントも参照すると良いかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://w3c.github.io/webappsec-post-spectre-webdev/&quot;&gt;Post-Spectre Web Development&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v7-7-0-npm-cli&quot;&gt;Release v7.7.0 · npm/cli&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/npm/cli/releases/tag/v7.7.0&quot; title=&quot;Release v7.7.0 · npm/cli&quot;&gt;github.com/npm/cli/releases/tag/v7.7.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm 7.7.0リリース。&lt;br&gt;
npm run-scriptと&lt;code&gt;npm exec&lt;/code&gt;が&lt;code&gt;--workspace&lt;/code&gt;フラグでworkspacesをサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;firefox-87-0-see-all-new-features-updates-and-fixes&quot;&gt;Firefox 87.0, See All New Features, Updates and Fixes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/87.0/releasenotes/&quot; title=&quot;Firefox 87.0, See All New Features, Updates and Fixes&quot;&gt;www.mozilla.org/en-US/firefox/87.0/releasenotes/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 87.0リリース。&lt;br&gt;
Referrer Policyのデフォルト値を&lt;code&gt;strict-origin-when-cross-origin&lt;/code&gt;に変更、トラッカーのスクリプトをローカルで置き換えるSmartBlock。&lt;br&gt;
DevToolsで&lt;code&gt;prefers-color-scheme&lt;/code&gt;のシミュレートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/87&quot; title=&quot;Firefox 87 for developers - Mozilla | MDN&quot;&gt;Firefox 87 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.mozilla.org/security/2021/03/22/firefox-87-trims-http-referrers-by-default-to-protect-user-privacy/&quot; title=&quot;Firefox 87 trims HTTP Referrers by default to protect user privacy - Mozilla Security Blog&quot;&gt;Firefox 87 trims HTTP Referrers by default to protect user privacy - Mozilla Security Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.mozilla.org/security/2021/03/23/introducing-smartblock/&quot; title=&quot;Firefox 87 introduces SmartBlock for Private Browsing - Mozilla Security Blog&quot;&gt;Firefox 87 introduces SmartBlock for Private Browsing - Mozilla Security Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v8-0-0-ajv-validator-ajv&quot;&gt;Release v8.0.0 · ajv-validator/ajv&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ajv-validator/ajv/releases/v8.0.0&quot; title=&quot;Release v8.0.0 · ajv-validator/ajv&quot;&gt;github.com/ajv-validator/ajv/releases/v8.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JSON&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JSON SchemaバリデーターのAjv 8.0.0リリース。&lt;br&gt;
JSON Schema draft-2020-12のサポート、JSON Type Definition(JTD)の仕様と揃えるために&lt;code&gt;instancePath&lt;/code&gt;を&lt;code&gt;dataPath&lt;/code&gt;にリネームなど。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jsontypedef.com/&quot; title=&quot;JSON Type Definition&quot;&gt;JSON Type Definition&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;json-type-definition&quot;&gt;JSON Type Definition&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jsontypedef.com/&quot; title=&quot;JSON Type Definition&quot;&gt;jsontypedef.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JSON&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;program&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;コードジェネレーター向けにJSONで型定義を表現する仕様。IETF/RFC 8927として策定中。&lt;br&gt;
JTDはコード生成を意識して作られているのでコンパクトな仕様、エラーに関しても仕様で定義されているため実装に依存しにくいポータブルなものを目指している。JSONまたはYAMLで記述できる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;billboard-js-3-0-release-d3-js-v6-support-new-candlestick-type-by-jae-sung-park-mar-2021-medium&quot;&gt;billboard.js 3.0 release: D3.js v6 support &amp;amp; new candlestick type! | by Jae Sung Park | Mar, 2021 | Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://netil.medium.com/billboard-js-3-0-release-d3-js-v6-support-new-candlestick-type-9bd74af6a753&quot; title=&quot;billboard.js 3.0 release: D3.js v6 support &amp;amp;amp; new candlestick type! | by Jae Sung Park | Mar, 2021 | Medium&quot;&gt;netil.medium.com/billboard-js-3-0-release-d3-js-v6-support-new-candlestick-type-9bd74af6a753&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;graphic&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;billboard.js 3.0リリース。&lt;br&gt;
D3.js v6へアップデート、Candlestick Chartの追加、&lt;code&gt;.export()&lt;/code&gt; API がサイズ指定をサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/naver/billboard.js/releases/tag/3.0.0&quot; title=&quot;Release 3.0.0 · naver/billboard.js&quot;&gt;Release 3.0.0 · naver/billboard.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;blog-next-js-10-1-next-js&quot;&gt;Blog - Next.js 10.1 | Next.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nextjs.org/blog/next-10-1&quot; title=&quot;Blog - Next.js 10.1 | Next.js&quot;&gt;nextjs.org/blog/next-10-1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Next.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Next.js 10.1リリース。&lt;br&gt;
webpack 5をopt-inで対応、パッケージサイズの改善、&lt;code&gt;next/image&lt;/code&gt;がApple M1の対応や&lt;code&gt;layout&lt;/code&gt;オプションの追加サポートなど。&lt;br&gt;
その他には、500ページのカスタマイズ、&lt;code&gt;router.push&lt;/code&gt;や&lt;code&gt;router.replace&lt;/code&gt;時にページトップへスクロールするように変更など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typescript-web-scratch&quot;&gt;TypeScriptの型定義からバリデーションコードを生成するツールを書いた | Web Scratch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://efcl.info/2021/03/26/create-validator-ts/&quot; title=&quot;TypeScriptの型定義からバリデーションコードを生成するツールを書いた | Web Scratch&quot;&gt;efcl.info/2021/03/26/create-validator-ts/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;express&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptの型定義からAjvとJSON Schemaを使ったバリデーションコードを生成するツールについて。&lt;br&gt;
また、リクエストをバリデーションせずにMongoなどのNoSQLのクエリにわたすと発生するNoSQL Injectionについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/create-validator-ts&quot; title=&quot;azu/create-validator-ts: Create JSON Schema validator from TypeScript.&quot;&gt;azu/create-validator-ts: Create JSON Schema validator from TypeScript.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-state-management-libraries-and-how-to-choose&quot;&gt;React State Management Libraries and How to Choose&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://daveceddia.com/react-state-management/&quot; title=&quot;React State Management Libraries and How to Choose&quot;&gt;daveceddia.com/react-state-management/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactのステート管理方法/ライブラリの比較。&lt;br&gt;
&lt;code&gt;useState&lt;/code&gt;/&lt;code&gt;useReducer&lt;/code&gt;、Redux、MobX、Recoil、react-query、XStateについて利点と欠点について書かれている&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.to-r.net/media/js-state-libraries-introduction/&quot; title=&quot;JS 状態管理ライブラリ探索記 – Introduction - to-R Media&quot;&gt;JS 状態管理ライブラリ探索記 – Introduction - to-R Media&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;handling-user-permissions-in-javascript-css-tricks&quot;&gt;Handling User Permissions in JavaScript | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/handling-user-permissions-in-javascript/&quot; title=&quot;Handling User Permissions in JavaScript | CSS-Tricks&quot;&gt;css-tricks.com/handling-user-permissions-in-javascript/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptでパーミッションのビジネスロジックを実装する方法についての記事。&lt;br&gt;
Single source of truthであること、変更が簡単であること、テスト可能で有ることを意識した設計と実装方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;making-the-slowest-fast-page-tune-the-web&quot;&gt;Making the slowest &amp;#039;fast&amp;#039; page | Tune The Web&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.tunetheweb.com/blog/making-the-slowest-fast-page/&quot; title=&quot;Making the slowest &amp;amp;#039;fast&amp;amp;#039; page | Tune The Web&quot;&gt;www.tunetheweb.com/blog/making-the-slowest-fast-page/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Lighthouse/WebVitalで満点な遅いページを作る方法について。&lt;br&gt;
意図して表示を遅らせることでスコアをあげるという実験。現実的には遅い&amp;quot;fast&amp;quot;なサイトは、スコアを上げる以外の意味はないため概念実証としての話。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;google-developers-japan-spectre&quot;&gt;Google Developers Japan: Spectre の影響を受けないウェブを作るための概念実証について&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers-jp.googleblog.com/2021/03/a-spectre-proof-of-concept-for-spectre.html&quot; title=&quot;Google Developers Japan: Spectre の影響を受けないウェブを作るための概念実証について&quot;&gt;developers-jp.googleblog.com/2021/03/a-spectre-proof-of-concept-for-spectre.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CPU&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;A Spectre proof-of-concept for a Spectre-proof webの翻訳記事。&lt;br&gt;
Spectreの脆弱性、ブラウザ上でのSpectreのデモ、ブラウザでのSpectre対策としてのプロセス分離について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://security.googleblog.com/2021/03/a-spectre-proof-of-concept-for-spectre.html&quot; title=&quot;Google Online Security Blog: A Spectre proof-of-concept for a Spectre-proof web&quot;&gt;Google Online Security Blog: A Spectre proof-of-concept for a Spectre-proof web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://leaky.page/&quot; title=&quot;leaky.page&quot;&gt;leaky.page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deno-deploy&quot;&gt;Deno Deploy&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://deno.com/deploy&quot; title=&quot;Deno Deploy&quot;&gt;deno.com/deploy&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Denoを扱うFaaS。&lt;br&gt;
Cloudflare Workersと同じくService Worker APIをベースにしていて、DenoのスクリプトをCDN Edgeで動かせるサービス。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;seek-oss-vanilla-extract-zero-runtime-stylesheets-in-typescript&quot;&gt;seek-oss/vanilla-extract: Zero-runtime Stylesheets-in-TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/seek-oss/vanilla-extract&quot; title=&quot;seek-oss/vanilla-extract: Zero-runtime Stylesheets-in-TypeScript&quot;&gt;github.com/seek-oss/vanilla-extract&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSSをTypeScriptで書いて、スコープ付きのCSS Variablesを含んだCSSファイルに展開するツール。&lt;br&gt;
Babelとwebpackを使いビルド時にCSSファイルを生成し、HTML側にはクラス名のみが入る。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;toplenboren-simple-git-hooks-a-simple-git-hooks-manager-for-small-projects&quot;&gt;toplenboren/simple-git-hooks: A simple git hooks manager for small projects&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/toplenboren/simple-git-hooks&quot; title=&quot;toplenboren/simple-git-hooks: A simple git hooks manager for small projects&quot;&gt;github.com/toplenboren/simple-git-hooks&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;git &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Git hooksを管理するnpmモジュール。&lt;br&gt;
&lt;code&gt;simple-git-hooks&lt;/code&gt;コマンドを実行するとpackage.jsonや&lt;code&gt;.simple-git-hooks.js&lt;/code&gt;に定義したGit Hookスクリプトを&lt;code&gt;.git/hooks/*&lt;/code&gt;にインストールする。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;developing-web-components-with-typescript-native-web-development-using-thin-libraries-j-rg-krause-apress&quot;&gt;Developing Web Components with TypeScript - Native Web Development Using Thin Libraries | Jörg Krause | Apress&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.apress.com/gp/book/9781484268391&quot; title=&quot;Developing Web Components with TypeScript - Native Web Development Using Thin Libraries | Jörg Krause | Apress&quot;&gt;www.apress.com/gp/book/9781484268391&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptを使ったWeb Components開発についての書籍&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;manning-testing-javascript-applications&quot;&gt;Manning | Testing JavaScript Applications&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.manning.com/books/testing-javascript-applications&quot; title=&quot;Manning | Testing JavaScript Applications&quot;&gt;www.manning.com/books/testing-javascript-applications&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2021年4月13日発売。&lt;br&gt;
JavaScriptのテストについての書籍。&lt;br&gt;
フロントエンド、バックエンド、React、E2Eテスト、CI/CDについて&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 30 Mar 2021 15:12:26 +0900</pubDate>
        <link>https://jser.info/2021/03/30/firefox-87.0-next.js-next.js-10.1-spectre/</link>
        <guid isPermaLink="true">https://jser.info/2021/03/30/firefox-87.0-next.js-next.js-10.1-spectre/</guid>
        
        <category>TypeScript</category>
        
        <category>book</category>
        
        <category>npm</category>
        
        <category>security</category>
        
        <category>Tools</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-03-23のJS: Node.js 15.12.0(fs.promisesのパフォーマンス改善)、strict CSP、CSS Auditing Tools</title>
        <description>&lt;p&gt;JSer.info #532 - Node.js 15.12.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v15.12.0/&quot;&gt;Node v15.12.0 (Current) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;fs&lt;/code&gt;の&lt;code&gt;readFile&lt;/code&gt;/&lt;code&gt;writeFile&lt;/code&gt;に対してPromise版の&lt;code&gt;fs.promises&lt;/code&gt;の&lt;code&gt;readFile&lt;/code&gt;/&lt;code&gt;writeFile&lt;/code&gt;が遅くなるというIssueがあります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/issues/37583&quot;&gt;fs.promises.readFile is 40% slower than fs.readFile · Issue #37583 · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.js 15.12.0ではこのパフォーマンス問題への改善が含まれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/pull/37608&quot;&gt;fs: improve fsPromises readFile performance by Linkgoron · Pull Request #37608 · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/pull/37610&quot;&gt;fs: improve fsPromises writeFile performance by Linkgoron · Pull Request #37610 · nodejs/node&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;writeに関してはコールバック版とほぼ同等になっている&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;その他には&lt;code&gt;crypto.create{Public,Private}Key&lt;/code&gt;がJWKオブジェクトをサポート、&lt;code&gt;AbortSignal.abort()&lt;/code&gt;の実装、&lt;code&gt;worker_threads&lt;/code&gt;モジュールに&lt;code&gt;{get,set}EnvironmentData&lt;/code&gt;が追加されています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/strict-csp/&quot;&gt;Mitigate cross-site scripting (XSS) with a strict Content Security Policy (CSP)&lt;/a&gt;という記事では、Content Security Policy (CSP)を使ったXSSの影響を軽減するアプローチについて書かれています。&lt;/p&gt;

&lt;p&gt;CSPには、特定のURLを許可リスト方式で扱う設定がありますが、許可したURLにJSONPなどのエンドポイントがあるとバイパスされる問題が知られています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/lweichselbaum/csp-is-dead-long-live-strict-csp-deepsec-2016?slide=15&quot;&gt;CSP Is Dead, Long Live Strict CSP! - DeepSec 2016 - Speaker Deck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/mikispag/content-security-policy-a-successful-mess-between-hardening-and-mitigation&quot;&gt;Content Security Policy: A successful mess between hardening and mitigation - Speaker Deck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;そのため、nonceベースかhashベースのstrictなCSP設定をすることで、CSPがバイパスされる可能性は低くなります。&lt;br&gt;
この記事では、nonceベースとhashベースのstrict CSP設定をどのようにするかについて書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2021/03/css-auditing-tools/&quot;&gt;CSS Auditing Tools — Smashing Magazine&lt;/a&gt;という記事では、CSSのAuditツールについてまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://cssstats.com/&quot;&gt;CSS Stats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://yellowlab.tools/&quot;&gt;Yellow Lab Tools - Page Speed audit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://isellsoap.github.io/specificity-visualizer/&quot;&gt;Specificity Visualizer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.projectwallace.com/&quot;&gt;CSS Analytics - Project Wallace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/katiefenn/parker&quot;&gt;katiefenn/parker: Stylesheet analysis tool.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chrome DevTools

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://umaar.com/dev-tips/209-css-overview/&quot;&gt;CSS Overview Panel - Chrome DevTools - Dev Tips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/coverage&quot;&gt;Find Unused JavaScript And CSS Code With The Coverage Tab In Chrome DevTools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;それぞれのツールの紹介やどのような項目を調べられるのかについてまとめられています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v15-12-0-current-node-js&quot;&gt;Node v15.12.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v15.12.0/&quot; title=&quot;Node v15.12.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v15.12.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 15.12.0リリース。&lt;br&gt;
&lt;code&gt;crypto.create{Public,Private}Key&lt;/code&gt;がJWKオブジェクトをサポート、&lt;code&gt;fs.promises&lt;/code&gt;のwriteFileとreadFileのパフォーマンス改善。&lt;br&gt;
&lt;code&gt;AbortSignal.abort()&lt;/code&gt;の実装、&lt;code&gt;worker_threads&lt;/code&gt;モジュールに&lt;code&gt;{get,set}EnvironmentData&lt;/code&gt;を追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/issues/37583&quot; title=&quot;fs.promises.readFile is 40% slower than fs.readFile · Issue #37583 · nodejs/node&quot;&gt;fs.promises.readFile is 40% slower than fs.readFile · Issue #37583 · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-release-v9-0-v8&quot;&gt;V8 release v9.0 · V8&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://v8.dev/blog/v8-release-90&quot; title=&quot;V8 release v9.0 · V8&quot;&gt;v8.dev/blog/v8-release-90&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;V8 v9.0リリース。&lt;br&gt;
&lt;code&gt;RegExp#insices&lt;/code&gt;の実装、&lt;code&gt;super&lt;/code&gt;のプロパティアクセスのパフォーマンス改善、JavaScriptからWasmの関数を呼ぶときのパフォーマンスを改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v7-3-0-googlechrome-lighthouse&quot;&gt;Release v7.3.0 · GoogleChrome/lighthouse&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/releases/tag/v7.3.0&quot; title=&quot;Release v7.3.0 · GoogleChrome/lighthouse&quot;&gt;github.com/GoogleChrome/lighthouse/releases/tag/v7.3.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Lighthouse 7.3.0リリース。&lt;br&gt;
新しいauditとしてcsp-xssを試験的に追加。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/pull/12044&quot; title=&quot;new\_audit: csp-xss by adamraine · Pull Request #12044 · GoogleChrome/lighthouse&quot;&gt;new_audit: csp-xss by adamraine · Pull Request #12044 · GoogleChrome/lighthouse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jasmine-3-7-0-md-at-main-jasmine-jasmine&quot;&gt;jasmine/3.7.0.md at main · jasmine/jasmine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jasmine/jasmine/blob/main/release_notes/3.7.0.md&quot; title=&quot;jasmine/3.7.0.md at main · jasmine/jasmine&quot;&gt;github.com/jasmine/jasmine/blob/main/release_notes/3.7.0.md&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Jasmine 3.7リリース。&lt;br&gt;
Node.jsのSource Mapsに対応、Array.prototypeを拡張している際にテストが一部落ちる問題の修正、&lt;code&gt;.and.callFake&lt;/code&gt;がGenerator関数をサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.medium.com/source-maps-in-node-js-482872b56116&quot; title=&quot;Source maps in Node.js. Supporting the many flavors of… | by Node.js | Medium&quot;&gt;Source maps in Node.js. Supporting the many flavors of… | by Node.js | Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-proposal-updates-2021-03-ecmascript-daily&quot;&gt;ECMAScript proposal updates @ 2021-03 | ECMAScript Daily&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/ecmascript/2021/03/22/ecmascript-proposal-update&quot; title=&quot;ECMAScript proposal updates @ 2021-03 | ECMAScript Daily&quot;&gt;ecmascript-daily.github.io/ecmascript/2021/03/22/ecmascript-proposal-update&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2021年3月のTC39でECMAScript Proposalのステータス変更のまとめ。&lt;br&gt;
Module FragmentsがStage 1へ、&lt;code&gt;Array#findLast&lt;/code&gt;がStage2へ、TemporalがStage 3へ更新など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://sosukesuzuki.dev/posts/stage-0-module-fragments/&quot; title=&quot;JavaScript の Module Fragments について&quot;&gt;JavaScript の Module Fragments について&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sinon-changelog-md-at-master-sinonjs-sinon&quot;&gt;sinon/CHANGELOG.md at master · sinonjs/sinon&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sinonjs/sinon/blob/master/CHANGELOG.md#1000--2021-03-22&quot; title=&quot;sinon/CHANGELOG.md at master · sinonjs/sinon&quot;&gt;github.com/sinonjs/sinon/blob/master/CHANGELOG.md#1000--2021-03-22&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Sinon.js 10.0.0リリース。&lt;br&gt;
IE 11、Legacy Edge、Legacy Safariのサポートを終了。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mitigate-cross-site-scripting-xss-with-a-strict-content-security-policy-csp&quot;&gt;Mitigate cross-site scripting (XSS) with a strict Content Security Policy (CSP)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/strict-csp/&quot; title=&quot;Mitigate cross-site scripting (XSS) with a strict Content Security Policy (CSP)&quot;&gt;web.dev/strict-csp/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSP&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ドメインの許可リストのCSPよりも、strict設定のCSPを推奨するという話。&lt;br&gt;
nonceとstrict-dynamicベースのCSP設定で防げるXSS、nonceベースとhashベースのCSPの設定、CSPの導入手順について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;supabse&quot;&gt;Supabseチームはどのようにフロントエンドの高速化に成功したのか - バンクーバーで考え中&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jp.taishikato.com/posts/making-the-supabase-dashboard-supa-fast&quot; title=&quot;Supabseチームはどのようにフロントエンドの高速化に成功したのか - バンクーバーで考え中&quot;&gt;jp.taishikato.com/posts/making-the-supabase-dashboard-supa-fast&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Making the Supabase Dashboard Supa-fastの翻訳記事。&lt;br&gt;
ベースラインと目標設定、バンドルサイズの改善、パフォーマンス文化について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://supabase.io/blog/2020/12/13/supabase-dashboard-performance&quot; title=&quot;Making the Supabase Dashboard Supa-fast&quot;&gt;Making the Supabase Dashboard Supa-fast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-1-tip-to-familiarize-with-new-javascript-codebases&quot;&gt;The #1 tip to familiarize with new JavaScript Codebases&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.kevinpeters.net/the-fastest-way-to-understand-new-code-bases&quot; title=&quot;The #1 tip to familiarize with new JavaScript Codebases&quot;&gt;www.kevinpeters.net/the-fastest-way-to-understand-new-code-bases&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;code-complexity&lt;/code&gt;を使ったコードの複雑度分析について。&lt;br&gt;
ComplexityとChurnについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/simonrenoult/code-complexity&quot; title=&quot;simonrenoult/code-complexity: Measure the churn/complexity ratio. Higher values mean hotspots where refactorings should happen.&quot;&gt;simonrenoult/code-complexity: Measure the churn/complexity ratio. Higher values mean hotspots where refactorings should happen.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;css-auditing-tools-smashing-magazine&quot;&gt;CSS Auditing Tools — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2021/03/css-auditing-tools/&quot; title=&quot;CSS Auditing Tools — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2021/03/css-auditing-tools/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSSのAuditツールについての記事。&lt;br&gt;
CSSセレクタの詳細度、複雑度の測定、Code Coverage、継続的な分析など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;next-10-years-of-node-js-understanding-the-needs-of-the-node-js-constituencies-by-node-js-mar-2021-medium&quot;&gt;Next 10 years of Node.js — Understanding the needs of the Node.js constituencies | by Node.js | Mar, 2021 | Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.medium.com/next-10-years-of-node-js-understanding-the-needs-of-the-node-js-constituencies-2f95a1df6a6f&quot; title=&quot;Next 10 years of Node.js — Understanding the needs of the Node.js constituencies | by Node.js | Mar, 2021 | Medium&quot;&gt;nodejs.medium.com/next-10-years-of-node-js-understanding-the-needs-of-the-node-js-constituencies-2f95a1df6a6f&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsの次の10年について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/next-10&quot; title=&quot;nodejs/next-10: Repository for discussion on strategic directions for next 10 years of Node.js&quot;&gt;nodejs/next-10: Repository for discussion on strategic directions for next 10 years of Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;101arrowz-isoworker-isomorphic-workerization-with-context-support&quot;&gt;101arrowz/isoworker: Isomorphic workerization with context support&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/101arrowz/isoworker&quot; title=&quot;101arrowz/isoworker: Isomorphic workerization with context support&quot;&gt;github.com/101arrowz/isoworker&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebWorkerと&lt;code&gt;worker_threds&lt;/code&gt;に対応したWorkerライブラリ。&lt;br&gt;
Inline CodeをWorkerコードを作成し、Workerに対してクラスや関数を含めたデータを渡して実行した結果を取得できる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;taoqf-node-html-parser-a-very-fast-html-parser-generating-a-simplified-dom-with-basic-element-query-support&quot;&gt;taoqf/node-html-parser: A very fast HTML parser, generating a simplified DOM, with basic element query support.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/taoqf/node-html-parser&quot; title=&quot;taoqf/node-html-parser: A very fast HTML parser, generating a simplified DOM, with basic element query support.&quot;&gt;github.com/taoqf/node-html-parser&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HTMLパーサとDOM APIライブラリ。&lt;br&gt;
パースした結果のオブジェクトでDOM APIライクな操作ができる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;hello-from-trpc-trpc&quot;&gt;Hello from tRPC | tRPC&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://trpc.io/&quot; title=&quot;Hello from tRPC | tRPC&quot;&gt;trpc.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Next.js&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HTTP通信のデータレイヤーライブラリ。&lt;br&gt;
TypeScriptとyup/zodなどのバリデーターを使ったサーバ側のAPIエンドポイントを定義し、その型をクライアントからも利用できる。&lt;br&gt;
React向けのHooks/SSR対応のクライアントライブラリも公開されている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;charts-css&quot;&gt;Charts.css&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://chartscss.org/&quot; title=&quot;Charts.css&quot;&gt;chartscss.org/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSSを使ったグラフライブラリ。&lt;br&gt;
様々な種類のチャートの表示に対応している。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;learning-tensorflow-js&quot;&gt;Learning TensorFlow.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://learning.oreilly.com/library/view/learning-tensorflowjs/9781492090786/&quot; title=&quot;Learning TensorFlow.js&quot;&gt;learning.oreilly.com/library/view/learning-tensorflowjs/9781492090786/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;MachineLearning&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2021年7月発売&lt;br&gt;
TensorFlow.jsの入門書&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 23 Mar 2021 12:32:29 +0900</pubDate>
        <link>https://jser.info/2021/03/23/node.js-15.12.0fs.promises-strict-csp-css-auditing-tools/</link>
        <guid isPermaLink="true">https://jser.info/2021/03/23/node.js-15.12.0fs.promises-strict-csp-css-auditing-tools/</guid>
        
        <category>node.js</category>
        
        <category>performance</category>
        
        <category>Tools</category>
        
        <category>testing</category>
        
        <category>browser</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-03-16のJS: Safari Technology Preview 122、React Native 0.64、SvelteKit</title>
        <description>&lt;p&gt;JSer.info #531 - Safari Technology Preview 122がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webkit.org/blog/11577/release-notes-for-safari-technology-preview-122/&quot;&gt;Release Notes for Safari Technology Preview 122 | WebKit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Safari Technology Preview 122では色々な機能が実装されています。&lt;br&gt;
実験フラグ付きでCSS &lt;code&gt;:focus-visible&lt;/code&gt;とCSS Color 5の&lt;code&gt;color-mix()&lt;/code&gt;/&lt;code&gt;color-contrast()&lt;/code&gt;/&lt;a href=&quot;https://drafts.csswg.org/css-color-5/#relative-colors&quot;&gt;Relative color syntax&lt;/a&gt;が実装されています。&lt;br&gt;
ES Proposal Stage 3の&lt;a href=&quot;https://github.com/tc39/proposal-private-methods&quot;&gt;Private method&lt;/a&gt;、&lt;a href=&quot;https://github.com/tc39/proposal-static-class-features&quot;&gt;Static private methods&lt;/a&gt;、&lt;a href=&quot;https://github.com/tc39/proposal-top-level-await&quot;&gt;Top-Level await&lt;/a&gt;、&lt;a href=&quot;https://github.com/tc39/proposal-regexp-match-indices&quot;&gt;RegExp Match Indices&lt;/a&gt;のサポート。&lt;br&gt;
Web WorkerとService Workerで&lt;code&gt;type: module&lt;/code&gt;をサポート、Paint Timingの(再)有効化なども含まれます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/module-workers/&quot;&gt;Threading the web with module workers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nhiroki.jp/2019/12/05/es-modules-for-dedicated-workers&quot;&gt;Chrome 80 から Web Worker (Dedicated Worker) で ES Modules が使えます&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Safariとは直接関係しませんが、2021年6月ごろにリリースされる予定のECMAScript 2021のリリース候補も公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/ecma262/releases/tag/es2021-candidate-2021-03&quot;&gt;Release ES2021 Candidate March 2021 · tc39/ecma262&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://2ality.com/2020/09/ecmascript-2021.html&quot;&gt;ECMAScript 2021: the final feature set&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;SvelteKitのソースコードが公開されています。&lt;br&gt;
SvelteKitはSvelteベースのNext.jsライクなフレームワークであった&lt;a href=&quot;https://sapper.svelte.dev/&quot;&gt;Sapper&lt;/a&gt;を置き換える目的で作られています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sveltejs/kit&quot;&gt;sveltejs/kit: A monorepo for SvelteKit and friends&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;まだソースコードの公開だけでリリースはされていません。&lt;br&gt;
&lt;a href=&quot;https://sk-incognito.vercel.app/learn/what-is-sveltekit&quot;&gt;What is SvelteKit? | SK Incognito&lt;/a&gt;というチュートリアルサイトでは、SvelteKitがどのようなものか紹介されているので、興味がある人は見てみるといいかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;React Native 0.64がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://reactnative.dev/blog/2021/03/12/version-0.64&quot;&gt;Announcing React Native 0.64 with Hermes on iOS · React Native&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;AOTによる事前コンパイルでfootprintを最適化してアプリの起動速度などを改善する目的である&lt;a href=&quot;https://github.com/facebook/hermes&quot;&gt;Hermes JS Engine&lt;/a&gt;がiOSでも利用可能になっています。&lt;br&gt;
また、HermesにES2015の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy&quot;&gt;Proxy object&lt;/a&gt;のサポートが追加されています。&lt;br&gt;
その他には、MetroでInline Requiresがデフォルトで有効化、&lt;a href=&quot;https://reactjs.org/blog/2020/10/20/react-v17.html&quot;&gt;React 17&lt;/a&gt;へアップデートなどが含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v0-9-0-evanw-esbuild&quot;&gt;Release v0.9.0 · evanw/esbuild&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/evanw/esbuild/releases/tag/v0.9.0&quot; title=&quot;Release v0.9.0 · evanw/esbuild&quot;&gt;github.com/evanw/esbuild/releases/tag/v0.9.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;relre&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;esbuild 0.9.0リリース。&lt;br&gt;
package.jsonの&lt;code&gt;exports&lt;/code&gt;フィールドのサポート、&lt;code&gt;esbuild.startService()&lt;/code&gt; APIの削除、bannerとfooterを言語ごとに指定できるように&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-122-webkit&quot;&gt;Release Notes for Safari Technology Preview 122 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/11577/release-notes-for-safari-technology-preview-122/&quot; title=&quot;Release Notes for Safari Technology Preview 122 | WebKit&quot;&gt;webkit.org/blog/11577/release-notes-for-safari-technology-preview-122/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webkit&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 122リリース。&lt;br&gt;
実験フラグ付きでCSS &lt;code&gt;:focus-visible&lt;/code&gt;とCSS Color 5の実装を追加。&lt;br&gt;
ES ProposalのPrivate method、Top-Level await、RegExp Match Indicesのサポート。&lt;br&gt;
Workerで&lt;code&gt;type: module&lt;/code&gt;をサポート、Paint Timingの有効化など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog-chrome-90-beta-av1-encoder-for-webrtc-new-origin-trials-and-more&quot;&gt;Chromium Blog: Chrome 90 Beta: AV1 Encoder for WebRTC, New Origin Trials, and More&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2021/03/chrome-90-beta-av1-encoder-for-webrtc.html&quot; title=&quot;Chromium Blog: Chrome 90 Beta: AV1 Encoder for WebRTC, New Origin Trials, and More&quot;&gt;blog.chromium.org/2021/03/chrome-90-beta-av1-encoder-for-webrtc.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 90 Betaリリース。&lt;br&gt;
AV1 Encoderのサポート。&lt;br&gt;
Origin Trialとして&lt;code&gt;getCurrentBrowsingContextMedia()&lt;/code&gt;、Breakout Box、WebAssembly Exception Handlingのサポート。&lt;br&gt;
CSSの&lt;code&gt;aspect-ratio&lt;/code&gt;とwidthかheightが指定されているときに推論されるように、&lt;code&gt;:state&lt;/code&gt;、&lt;code&gt;overflow: clip&lt;/code&gt;のサポート。&lt;br&gt;
Feature-Policyに代わるPermissions-Policy、&lt;code&gt;StaticRange&lt;/code&gt;のサポートなど。&lt;br&gt;
&lt;code&gt;navigator.plugins&lt;/code&gt;と&lt;code&gt;navigator.mimeTypes&lt;/code&gt;が空要素を返すようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-react-native-0-64-with-hermes-on-ios-react-native&quot;&gt;Announcing React Native 0.64 with Hermes on iOS · React Native&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://reactnative.dev/blog/2021/03/12/version-0.64&quot; title=&quot;Announcing React Native 0.64 with Hermes on iOS · React Native&quot;&gt;reactnative.dev/blog/2021/03/12/version-0.64&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;iOS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Android&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React Native 0.64リリース。&lt;br&gt;
iOSでもJSエンジンのHermesを利用可能に、MetroでInline Requiresがデフォルトで有効化、HermesがES Proxyのサポート、React 17へアップデートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sveltejs-kit-a-monorepo-for-sveltekit-and-friends&quot;&gt;sveltejs/kit: A monorepo for SvelteKit and friends&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sveltejs/kit&quot; title=&quot;sveltejs/kit: A monorepo for SvelteKit and friends&quot;&gt;github.com/sveltejs/kit&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Svelte&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;SvelteKitのソースコードが公開された&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-es2021-candidate-march-2021-tc39-ecma262&quot;&gt;Release ES2021 Candidate March 2021 · tc39/ecma262&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tc39/ecma262/releases/tag/es2021-candidate-2021-03&quot; title=&quot;Release ES2021 Candidate March 2021 · tc39/ecma262&quot;&gt;github.com/tc39/ecma262/releases/tag/es2021-candidate-2021-03&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ECMAScript 2021のリリース候補が公開された。ECMAScript 2021に入る予定の機能は決定され仕様もフリーズされたため、masterブランチはES 2022となった&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://2ality.com/2020/09/ecmascript-2021.html&quot; title=&quot;ECMAScript 2021: the final feature set&quot;&gt;ECMAScript 2021: the final feature set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/proposals/blob/master/finished-proposals.md&quot; title=&quot;proposals/finished-proposals.md at master · tc39/proposals&quot;&gt;proposals/finished-proposals.md at master · tc39/proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;socket-io-4-0-0-socket-io&quot;&gt;Socket.IO 4.0.0 | Socket.IO&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://socket.io/blog/socket-io-4-release/&quot; title=&quot;Socket.IO 4.0.0 | Socket.IO&quot;&gt;socket.io/blog/socket-io-4-release/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebSocket&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Socket.IO 4.0.0リリース。&lt;br&gt;
破壊的な変更としてサーバ側の&lt;code&gt;io.to()&lt;/code&gt;がimmutableに変更、protocolは互換性を維持している。&lt;br&gt;
&lt;code&gt;pingTimeout&lt;/code&gt;のデフォルト値を5秒から20秒へ変更、Utilityメソッドの追加、&lt;code&gt;autoUnref&lt;/code&gt;オプションの追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://socket.io/docs/v3/migrating-from-3-x-to-4-0/&quot; title=&quot;Migrating from 3.x to 4.0 | Socket.IO&quot;&gt;Migrating from 3.x to 4.0 | Socket.IO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/socketio/engine.io/pull/616&quot; title=&quot;fix: set default protocol version to 3 to allow backward compatibilit… by simonemazzoni · Pull Request #616 · socketio/engine.io&quot;&gt;fix: set default protocol version to 3 to allow backward compatibilit… by simonemazzoni · Pull Request #616 · socketio/engine.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;debugging-layout-shifts&quot;&gt;Debugging layout shifts&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/debugging-layout-shifts/&quot; title=&quot;Debugging layout shifts&quot;&gt;web.dev/debugging-layout-shifts/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Layout Instability APIでのCumulative Layout Shift (CLS)の計測とCLSの特定とデバッグ方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;digging-into-css-logical-properties&quot;&gt;Digging Into CSS Logical Properties&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ishadeed.com/article/css-logical-properties/&quot; title=&quot;Digging Into CSS Logical Properties&quot;&gt;ishadeed.com/article/css-logical-properties/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;RTLに対応したCSSの書き方と&lt;code&gt;margin-inline-end&lt;/code&gt;について。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;css-in-js&quot;&gt;レシピサービスのフロントエンドに CSS in JS を採用した話 - クックパッド開発者ブログ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://techlife.cookpad.com/entry/2021/03/15/090000&quot; title=&quot;レシピサービスのフロントエンドに CSS in JS を採用した話 - クックパッド開発者ブログ&quot;&gt;techlife.cookpad.com/entry/2021/03/15/090000&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;emotionを使ったCSS-in-JSについて。&lt;br&gt;
styled-componentsの記法ではなくString Stylesを採用した理由、stylelintを使ったLint、Jestを使ったスナップショットテストについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-what-is-the-meaning-of-this&quot;&gt;JavaScript: What is the meaning of this?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/javascript-this/&quot; title=&quot;JavaScript: What is the meaning of this?&quot;&gt;web.dev/javascript-this/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;いろいろなケースの&lt;code&gt;this&lt;/code&gt;の意味について解説している記事&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jsprimer.net/basic/function-this/&quot; title=&quot;関数とthis · JavaScript Primer #jsprimer&quot;&gt;関数とthis · JavaScript Primer #jsprimer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;beyond-console-log-level-up-your-debugging-skills-sitepoint&quot;&gt;Beyond Console.log() – Level up Your Debugging Skills - SitePoint&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sitepoint.com/beyond-console-log-level-up-your-debugging-skills/&quot; title=&quot;Beyond Console.log() – Level up Your Debugging Skills - SitePoint&quot;&gt;www.sitepoint.com/beyond-console-log-level-up-your-debugging-skills/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Console APIやChrome DevToolsを使ったデバッグについての記事。&lt;br&gt;
ログフォーマット、Console APIの紹介、Dev Tools上で使える関数、Overrides、VScodeとの連携についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-death-of-a-node-js-process-thomas-hunter-ii&quot;&gt;The Death of a Node.js Process - Thomas Hunter II&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://thomashunter.name/posts/2021-03-08-the-death-of-a-nodejs-process&quot; title=&quot;The Death of a Node.js Process - Thomas Hunter II&quot;&gt;thomashunter.name/posts/2021-03-08-the-death-of-a-nodejs-process&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsにおけるプロセス終了とエラーについて。&lt;br&gt;
uncaughtException、unhandledRejectionでのエラーのキャッチと&lt;code&gt;process.exit&lt;/code&gt;でのプロセス終了方法。&lt;br&gt;
また、Signalとそれをハンドリングできるかどうかについてのまとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;post-spectre-web-development&quot;&gt;Post-Spectre Web Development&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://w3c.github.io/webappsec-post-spectre-webdev/&quot; title=&quot;Post-Spectre Web Development&quot;&gt;w3c.github.io/webappsec-post-spectre-webdev/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Spectre以後のウェブ開発における脅威モデルと戦略についてのドキュメント。&lt;br&gt;
Isolation、サブリソース、クロスオリジンを意図した操作についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what-is-sveltekit-sk-incognito&quot;&gt;What is SvelteKit? | SK Incognito&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://sk-incognito.vercel.app/learn/what-is-sveltekit&quot; title=&quot;What is SvelteKit? | SK Incognito&quot;&gt;sk-incognito.vercel.app/learn/what-is-sveltekit&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Svelte&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;SvelteKitのチュートリアルサイト&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cloud9c-taro-a-lightweight-3d-game-engine-for-the-web&quot;&gt;Cloud9c/taro: A lightweight 3D game engine for the web.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Cloud9c/taro&quot; title=&quot;Cloud9c/taro: A lightweight 3D game engine for the web.&quot;&gt;github.com/Cloud9c/taro&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;3D&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;game&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;three.jsとcannon-esを使った3Dゲームエンジンライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rsms-estrella-lightweight-and-versatile-build-tool-based-on-the-esbuild-compiler&quot;&gt;rsms/estrella: Lightweight and versatile build tool based on the esbuild compiler&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rsms/estrella&quot; title=&quot;rsms/estrella: Lightweight and versatile build tool based on the esbuild compiler&quot;&gt;github.com/rsms/estrella&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;bundler&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;esbuildとtscのラッパーツール。&lt;br&gt;
esbuildでビルドしながら、tscでの型チェックを同時に実行できるビルドツール&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://dev.to/walpolea/through-the-pipeline-an-exploration-of-front-end-bundlers-ea1&quot; title=&quot;Through the pipeline: An exploration of front-end bundlers - DEV Community 👩‍💻👨‍💻&quot;&gt;Through the pipeline: An exploration of front-end bundlers - DEV Community 👩‍💻👨‍💻&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 16 Mar 2021 08:42:20 +0900</pubDate>
        <link>https://jser.info/2021/03/16/safari-technology-preview-122-react-native-0.64-sveltekit/</link>
        <guid isPermaLink="true">https://jser.info/2021/03/16/safari-technology-preview-122-react-native-0.64-sveltekit/</guid>
        
        <category>Tools</category>
        
        <category>debug</category>
        
        <category>Chrome</category>
        
        <category>CSS</category>
        
        <category>React</category>
        
        
        <category>JSer</category>
        
      </item>
    
  </channel>
</rss>
